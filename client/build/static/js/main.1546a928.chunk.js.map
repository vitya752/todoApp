{"version":3,"sources":["api/authApi.js","api/notesApi.js","api/settingsApi.js","api/dialogsApi.js","api/messagesApi.js","api/usersApi.js","utils/requestError.js","hooks/useLocalStorage.js","redux/authReducer.js","redux/notesReducer.js","redux/chatReducer.js","utils/formatDate.js","utils/transformData.js","redux/dialogsReducer.js","redux/store.js","components/templates/Loader/Loader.js","components/List/ItemList/ItemList.js","components/List/ItemList/ItemListContainer.js","components/List/List.js","components/List/List–°ontainer.js","components/Navigation/Search/Search.js","components/Navigation/Search/SearchContainer.js","components/Navigation/Filter/Filter.js","components/Navigation/Filter/FilterContainer.js","components/Navigation/Navigation.js","components/templates/InputGroup/InputGroup.js","components/AddItem/AddItemField.js","components/AddItem/AddItemFieldContainer.js","pages/TodoPage.js","components/AuthForm/AuthForm.js","components/AuthForm/AuthFormContainer.js","pages/AuthPage.js","hooks/useSocket.js","components/templates/Avatar/Avatar.js","components/OnlineUsers/OnlineUsersItem/OnlineUsersItem.js","components/OnlineUsers/OnlineUsers.js","components/Messages/Message/Message.js","components/templates/ErrorAlert/ErrorAlert.js","components/Messages/Messages.js","components/Messages/MessageInput/MessageInput.js","components/Chat/Chat.js","components/Chat/ChatContainer.js","pages/ChatPage.js","context/dialogsContext.js","components/DialogsBlock/DialogsSearch/DialogsSearchInput/DialogsSearchInput.js","components/DialogsBlock/DialogsSearch/DialogsFound/DialogsFoundItem/DialogsFoundItem.js","components/DialogsBlock/DialogsSearch/DialogsFound/DialogsNewMessage/DialogsNewMessage.js","components/DialogsBlock/DialogsSearch/DialogsFound/DialogsFound.js","components/DialogsBlock/DialogsSearch/DialogsSearch.js","components/DialogsBlock/DialogItem/DialogItem.js","components/DialogsBlock/DialogsBlock.js","components/Dialogs/Dialogs.js","utils/getPartner.js","components/Dialogs/DialogsContainer.js","pages/DialogsPage.js","components/Settings/Settings.js","components/Settings/SettingsContainer.js","pages/SettingsPage.js","routes/index.js","components/NavBar/NavBar.js","components/App/App.js","index.js"],"names":["authApi","url","login","email","password","a","async","axios","post","register","check","token","notesApi","template","create","headers","Authorization","getNotes","get","addNote","text","updateNote","noteId","important","done","patch","id","deleteNote","settingsApi","setSettings","nickname","avatar","deleteAcc","delete","dialogsApi","getDialogs","createDialog","partnerId","messagesApi","getMessages","dialogId","sendMessage","usersApi","findUsers","reqEmail","requestError","action","e","dispatch","toast","response","data","message","useLocaleStorage","saveUser","user","localStorage","setItem","JSON","stringify","getUser","parse","getItem","deleteUser","removeItem","initialState","userId","isAuth","fetching","form","pass","fetchingAC","type","setAuthAC","obj","setAuthFormAC","name","value","payload","setSettingsAC","requestLoginThunk","api","statusText","requestRegisterThunk","deleteAccThunk","updateSettingsThunk","cheackAuthThunk","storage","reducer","state","sending","notes","newNote","search","activeFilter","sendingAC","setNewNoteAC","updateNoteAC","note","setSearchAC","setFilterAC","newFilter","requestNotesThunk","requestAddNoteThunk","requestUpdateNoteThunk","requestDeleteNoteThunk","console","log","idx","findIndex","el","_id","slice","openOnlineUsers","messageField","onlineUsers","messages","pushMessageAC","date","Date","getHours","getMinutes","clearMessagesAC","setOpenOnlineUsersAC","setOnlineUsersAC","deleteUserAC","formatDate","dateFromBase","dt","dayMonthDate","getDate","padStart","dayMonthDt","monthDate","getMonth","monthDt","yearDate","getFullYear","yearDt","hours","minutes","returnDate","_transformDialogs","dialogs","map","dialog","_transformDialog","sort","b","fullDate","partner","author","isOnline","lastSeen","lastMessage","createdAt","my","unreadMessages","participants","_transformMessages","_transformMessage","ownerMessage","senderId","loading","viewSearchWindow","searchField","selectedNewId","firstMessage","selectedDialog","foundUsers","isTyping","status","writersName","setLoadingAC","setViewSearchWindowAC","setSearchFieldAC","setSelectedNewIdAC","setFirstMessageAC","setSelectedDialogAC","setFoundUsersAC","setMessagesAC","updateReadstatusAC","setIsTypingAC","createDialogThunk","getDialogsThunk","transformDialogs","getMessagesFromDialogThunk","transformMessages","sendMessageThunk","socket","pushToMessagesThunk","newMessage","findUsersThunk","toLowerCase","transformFoundUsers","item","reducers","combineReducers","auth","authReducer","todoPage","notesReducer","chatPage","chatReducer","formReducer","dialogsPage","dialogsReducer","store","createStore","applyMiddleware","ReduxThunk","window","Loader","className","ItemList","handleClick","renderButtons","classNames","onClickFunction","fontAwesomeIcon","faExclamation","faCheckSquare","faTrash","key","onClick","disabled","icon","connect","bindActionCreators","itemId","target","List","length","role","useEffect","resultNotes","filter","includes","searchNotes","filterNotes","Search","handleChangeSearch","onChange","Filter","handleChangeFilter","buttons","label","isActive","Navigation","InputGroup","caption","handler","readonly","readOnly","AddItemField","handleChangeField","TodoPage","AuthForm","fieldEmail","fieldPass","handleChange","htmlFor","props","AuthPage","useSocket","socketIOClient","Avatar","small","alt","isDialog","src","OnlineUsersItem","Message","ErrorAlert","children","Messages","messagesRef","useRef","current","scrollTo","scrollHeight","renderMessages","ref","MessageInput","submitMessage","declareIsTyping","useState","setMessage","viewSmiles","setViewSmiles","placeholder","version","xmlns","xlink","x","y","viewBox","space","d","native","onSelect","emoji","Chat","ChatContainer","emit","disconnect","on","addMess","pushOnlineUsersOnClient","off","ChatPage","dialogsContext","createContext","DialogsSearchInput","useContext","DialogsContext","onFocus","DialogsFoundItem","checked","DialogsNewMessage","DialogsFound","DialogsSearch","DialogItem","selectDialog","substring","Dialogs","dialogWindowStatus","setDialogWindowStatus","messagesProps","DialogsBlock","getPartner","addMessage","useCallback","messagesReaded","updateDialogs","setIsTyping","clearInterval","setIsTypingTimer","setTimeout","dialogsProps","then","Provider","DialogsPage","Settings","changeHandler","SettingsPage","routesRender","path","exact","to","menuStatus","setMenuStatus","href","preventDefault","routes","nav","ReactDOM","render","document","getElementById"],"mappings":"skBAyBeA,EAvBC,WAEZ,IAAMC,EAAM,YAcZ,MAAO,CACHC,MAbU,SAAOC,EAAOC,GAAd,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACGE,IAAMC,KAAN,UAAcP,EAAd,UAA2B,CAACE,QAAOC,cADtC,8EAcVK,SAVa,SAAON,EAAOC,GAAd,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACAE,IAAMC,KAAN,UAAcP,EAAd,aAA8B,CAACE,QAAOC,cADtC,8EAWbM,MAPU,SAAOC,GAAP,SAAAN,EAAAC,OAAA,kEAAAD,EAAA,MACGE,IAAMC,KAAN,UAAcP,EAAd,UAA2B,CAACU,WAD/B,gFC0BHC,EAtCE,SAAAD,GAEb,IAAMV,EAAM,YAENY,EAAWN,IAAMO,OAAO,CAC1BC,QAAS,CACLC,cAAc,UAAD,OAAYL,MAwBjC,MAAO,CACHM,SArBa,oBAAAZ,EAAAC,OAAA,kEAAAD,EAAA,MACAQ,EAASK,IAAT,UAAgBjB,KADhB,8EAsBbkB,QAlBY,SAAOC,GAAP,SAAAf,EAAAC,OAAA,kEAAAD,EAAA,MACCQ,EAASL,KAAT,UAAiBP,EAAjB,QAA4B,CAACmB,UAD9B,8EAmBZC,WAfe,SAAOC,EAAQC,EAAWC,GAA1B,SAAAnB,EAAAC,OAAA,kEAAAD,EAAA,MACFQ,EAASY,MAAT,UAAkBxB,EAAlB,WAAgC,CACzCyB,GAAIJ,EACJC,YACAC,UAJW,8EAgBfG,WARe,SAAOL,GAAP,SAAAjB,EAAAC,OAAA,kEAAAD,EAAA,MACFQ,EAASL,KAAT,UAAiBP,EAAjB,WAA+B,CAACyB,GAAIJ,KADlC,gFCFRM,EAxBK,SAAAjB,GAEhB,IAAMV,EAAM,gBAENY,EAAWN,IAAMO,OAAO,CAC1BC,QAAS,CACLC,cAAc,UAAD,OAAYL,MAYjC,MAAO,CACHkB,YATgB,SAAOC,EAAUC,GAAjB,SAAA1B,EAAAC,OAAA,kEAAAD,EAAA,MACHQ,EAASY,MAAMxB,EAAK,CAAE6B,WAAUC,YAD7B,8EAUhBC,UANc,oBAAA3B,EAAAC,OAAA,kEAAAD,EAAA,MACDQ,EAASoB,OAAOhC,IADf,gFCUPiC,EAxBI,SAACvB,GAEhB,IAAMV,EAAM,eAENY,EAAWN,IAAMO,OAAO,CAC1BC,QAAS,CACLC,cAAc,UAAD,OAAYL,MAYjC,MAAO,CACHwB,WATe,oBAAA9B,EAAAC,OAAA,kEAAAD,EAAA,MACFQ,EAASK,IAAT,UAAgBjB,KADd,8EAUfmC,aANiB,SAAOC,EAAWjB,GAAlB,SAAAf,EAAAC,OAAA,kEAAAD,EAAA,MACJQ,EAASL,KAAT,UAAiBP,GAAO,CAACoC,YAAWjB,UADhC,gFCUVkB,EAxBK,SAAC3B,GAEjB,IAAMV,EAAM,gBAENY,EAAWN,IAAMO,OAAO,CAC1BC,QAAS,CACLC,cAAc,UAAD,OAAYL,MAYjC,MAAO,CACH4B,YATgB,SAAMC,GAAN,SAAAnC,EAAAC,OAAA,kEAAAD,EAAA,MACHQ,EAASK,IAAT,UAAgBjB,EAAhB,YAAuBuC,KADpB,8EAUhBC,YANgB,SAAOD,EAAUpB,GAAjB,SAAAf,EAAAC,OAAA,kEAAAD,EAAA,MACHQ,EAASL,KAAT,UAAiBP,GAAO,CAACuC,WAAUpB,UADhC,gFCKTsB,EAnBE,SAAC/B,GAEd,IAEME,EAAWN,IAAMO,OAAO,CAC1BC,QAAS,CACLC,cAAc,UAAD,OAAYL,MAQjC,MAAO,CACHgC,UALc,SAAOC,GAAP,SAAAvC,EAAAC,OAAA,kEAAAD,EAAA,MACDQ,EAASL,KAAT,UATL,aAS6B,CAACoC,cADxB,gFCVTC,EAAe,SAACC,EAAQC,EAAGC,GACpCA,EAASF,GACTG,YAAMF,EAAEG,SAASC,KAAKC,UCJbC,EAAmB,WAa5B,MAAO,CACHC,SAba,SAACC,GACdC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,KAa5CK,QAVY,WACZ,OAAOF,KAAKG,MAAML,aAAaM,QAAQ,UAUvCC,WAPe,WACfP,aAAaQ,WAAW,WCE1BC,EAAe,CACjBC,OAAQ,KACRvD,MAAO,KACPR,MAAO,KACP2B,SAAU,KACVC,OAAQ,KACRoC,QAAQ,EACRC,UAAU,EACVC,KAAM,CACFlE,MAAO,GACPmE,KAAM,KAkDDC,EAAa,SAACH,GACvB,MAAO,CACHI,KApES,WAqETJ,aAIKK,EAAY,SAACC,GAAS,IAAD,EACsDA,EAA7ER,cADuB,MACd,KADc,IACsDQ,EAA9D5C,gBADQ,MACG,KADH,IACsD4C,EAA7C3C,cADT,MACkB,KADlB,IACsD2C,EAA9BvE,aADxB,MACgC,KADhC,IACsDuE,EAAhB/D,MACpE,MAAO,CACH6D,KA3ES,WA4ETN,SACAvD,WAL0B,MAC8C,KAD9C,EAM1BmB,WACAC,SACA5B,UAIKwE,EAAgB,SAACC,EAAMC,GAChC,MAAO,CACHL,KArFoB,sBAsFpBM,QAAQ,eACHF,EAAOC,KAWPE,EAAgB,SAACH,EAAMC,GAChC,MAAO,CACHL,KAlGa,eAmGbM,QAAQ,eACHF,EAAOC,KAKPG,EAAoB,SAAC7E,EAAOmE,GACrC,OAAO,SAAOtB,GAAP,+BAAA3C,EAAAC,OAAA,gEAEC0C,EAASuB,GAAW,IACdU,EAAMjF,IAHb,WAAAK,EAAA,MAIoB4E,EAAI/E,MAAMC,EAAOmE,IAJrC,OAKwB,QADjBnB,EAJP,QAKS+B,aAAsB,EACgC/B,EAAKA,KAAxDe,EADkB,EAClBA,OAAQ/D,EADU,EACVA,MAAO2B,EADG,EACHA,SAAUC,EADP,EACOA,OAAQpB,EADf,EACeA,MAAOyC,EADtB,EACsBA,QAC/BC,IACRC,SAASH,EAAKA,MACtBH,EAASyB,EAAU,CAACP,SAAQpC,WAAUC,SAAQ5B,QAAOQ,WACrDqC,EAASuB,GAAW,IACpBvB,EA1BL,CACHwB,KA7FgB,oBAuHRvB,YAAMG,IAZX,gDAeCP,EAAa0B,GAAW,GAAZ,KAAuBvB,GAfpC,0DAoBEmC,EAAuB,SAAChF,EAAOmE,GACxC,OAAO,SAAOtB,GAAP,iBAAA3C,EAAAC,OAAA,gEAEC0C,EAASuB,GAAW,IACdU,EAAMjF,IAHb,WAAAK,EAAA,MAIoB4E,EAAIxE,SAASN,EAAOmE,IAJxC,OAKwB,aADjBnB,EAJP,QAKS+B,aACJjC,YAAME,EAAKA,KAAKC,SAChBJ,EAASuB,GAAW,KAPzB,gDAUC1B,EAAa0B,GAAW,GAAZ,KAAuBvB,GAVpC,0DAeEoC,EAAiB,SAAC,GAAa,IAAZzE,EAAW,EAAXA,MAC5B,OAAO,SAAMqC,GAAN,mBAAA3C,EAAAC,OAAA,gEAEC0C,EAASuB,GAAW,IACdU,EAAMrD,EAAYjB,GAHzB,WAAAN,EAAA,MAIoB4E,EAAIjD,aAJxB,OAKwB,cADjBmB,EAJP,QAKS+B,aACG9B,EAAWD,EAAKA,KAAhBC,QACPH,YAAMG,GACNJ,EAASuB,GAAW,IACpBvB,EAASyB,EAAU,KACnBzB,EAAS2B,EAAc,QAAS,KAChC3B,EAAS2B,EAAc,OAAQ,KACftB,IACRU,cAbb,gDAgBClB,EAAa0B,GAAW,GAAZ,KAAuBvB,GAhBpC,0DAqBEqC,EAAsB,SAAC,GAA+B,IAA9B1E,EAA6B,EAA7BA,MAAOmB,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,OAClD,OAAO,SAAMiB,GAAN,mBAAA3C,EAAAC,OAAA,gEAEC0C,EAASuB,GAAW,IACdU,EAAMrD,EAAYjB,GAHzB,WAAAN,EAAA,MAIoB4E,EAAIpD,YAAYC,EAAUC,IAJ9C,OAKwB,cADjBoB,EAJP,QAKS+B,aACG9B,EAAWD,EAAKA,KAAhBC,QACPJ,EAASuB,GAAW,IACpBtB,YAAMG,IARX,gDAWCP,EAAa0B,GAAW,GAAZ,KAAuBvB,GAXpC,0DAgBEsC,EAAkB,WAC3B,OAAO,SAAMtC,GAAN,mBAAA3C,EAAAC,OAAA,4DAEOiF,EAAUlC,MACVE,EAAOgC,EAAQ3B,aACVL,EAAK5C,MAJjB,wBAKWsE,EAAMjF,IALjB,WAAAK,EAAA,MAMwB4E,EAAIvE,MAAM6C,EAAK5C,QANvC,OAO4B,aAP5B,OAOauE,WACJlC,EAASyB,EAAUlB,IAEnBgC,EAAQxB,aAVjB,wBAaKf,EAASyB,EAAU,KAbxB,0DAgBC5B,EAAa0B,GAAW,GAAZ,KAAuBvB,GAhBpC,2DAqBIwC,EA3LC,WAAmC,IAAlCC,EAAiC,uDAAzBxB,EAAcnB,EAAW,uCAC9C,OAAOA,EAAO0B,MACV,IAtBS,WAuBL,OAAO,eACAiB,EADP,CAEIrB,SAAUtB,EAAOsB,WAEzB,IA1BS,WA2BL,OAAO,eACAqB,EADP,CAEIvB,OAAQpB,EAAOoB,OACfvD,MAAOmC,EAAOnC,MACdR,MAAO2C,EAAO3C,MACd2B,SAAUgB,EAAOhB,SACjBC,OAAQe,EAAOf,OACfoC,SAAQrB,EAAOnC,QAEvB,IAnCoB,sBAoChB,OAAO,eACA8E,EADP,CAEIpB,KAAK,eACEoB,EAAMpB,KADT,GAEGvB,EAAOgC,WAItB,IA3CgB,kBA4CZ,OAAO,eACAW,EADP,CAEIpB,KAAM,CACFlE,MAAO,GACPmE,KAAM,MAIlB,IAnDa,eAoDT,OAAO,eACAmB,EADP,GAEO3C,EAAOgC,SAGlB,QACI,OAAOW,I,QCvDbxB,EAAe,CACjBG,UAAU,EACVsB,SAAS,EACTC,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRC,aAAc,OA0CLvB,EAAa,SAACH,GACvB,MAAO,CACHI,KA1DS,WA2DTJ,aAIK2B,EAAY,SAACL,GACtB,MAAO,CACHlB,KAhEQ,UAiERkB,YAWKM,EAAe,SAACJ,GACzB,MAAO,CACHpB,KA5Ea,eA6EboB,YAIKK,EAAe,SAACC,EAAM5E,GAC/B,MAAO,CACHkD,KAlFY,cAmFZ0B,OACA5E,WAIK6E,EAAc,SAACN,GACxB,MAAO,CACHrB,KAzFW,aA0FXqB,WAIKO,EAAc,SAACC,GACxB,MAAO,CACH7B,KA/FW,aAgGX6B,cAIKC,EAAoB,SAAC3F,GAC9B,OAAO,SAAOqC,GAAP,iBAAA3C,EAAAC,OAAA,gEAEC0C,EAASuB,GAAW,IACdU,EAAMrE,EAASD,GAHtB,WAAAN,EAAA,MAIoB4E,EAAIhE,YAJxB,OAKwB,QADjBkC,EAJP,QAKS+B,YACJlC,EAASuB,GAAW,IACpBvB,EA3CL,CACHwB,KAtEU,YAuEVmB,MAyC4BxC,EAAKA,KAAKwC,QAC9B1C,YAAME,EAAKA,KAAKC,UAEhBH,YAAM,yCAVX,gDAaCJ,EAAa0B,GAAW,GAAZ,KAAuBvB,GAbpC,0DAkBEuD,EAAsB,SAAC5F,EAAOS,GACvC,OAAO,SAAO4B,GAAP,iBAAA3C,EAAAC,OAAA,gEAEC0C,EAAS+C,GAAU,IACbd,EAAMrE,EAASD,GAHtB,WAAAN,EAAA,MAIoB4E,EAAI9D,QAAQC,IAJhC,OAKwB,aADjB+B,EAJP,QAKS+B,YACJlC,EAASsD,EAAkB3F,IAC3BqC,EAASgD,EAAa,KACtBhD,EAAS+C,GAAU,IACnB9C,YAAME,EAAKA,KAAKC,UAEhBH,YAAM,yCAXX,gDAcCJ,EAAakD,GAAU,GAAX,KAAsB/C,GAdnC,0DAmBEwD,EAAyB,SAAC7F,EAAOW,EAAQC,EAAWC,GAC7D,OAAO,SAAOwB,GAAP,iBAAA3C,EAAAC,OAAA,gEAEC0C,EAAS+C,GAAU,IACbd,EAAMrE,EAASD,GAHtB,WAAAN,EAAA,MAIoB4E,EAAI5D,WAAWC,EAAQC,EAAWC,IAJtD,OAKwB,cADjB2B,EAJP,QAKS+B,YACJlC,EAASiD,EAAa9C,EAAKA,KAAK+C,KAAM5E,IACtC0B,EAAS+C,GAAU,IACnB9C,YAAME,EAAKA,KAAKC,UAEhBH,YAAM,yCAVX,gDAaCJ,EAAakD,GAAU,GAAX,KAAsB/C,GAbnC,0DAkBEyD,EAAyB,SAAC9F,EAAOW,GAC1C,OAAO,SAAO0B,GAAP,iBAAA3C,EAAAC,OAAA,gEAEC0C,EAAS+C,GAAU,IACbd,EAAMrE,EAASD,GAHtB,WAAAN,EAAA,MAIoB4E,EAAItD,WAAWL,IAJnC,OAIO6B,EAJP,OAKCuD,QAAQC,IAAIxD,GACW,aAApBA,EAAK+B,YACJlC,EAASiD,EAAa,KAAM3E,IAC5B0B,EAAS+C,GAAU,IACnB9C,YAAME,EAAKA,KAAKC,UAEhBH,YAAM,yCAXX,kDAcCJ,EAAakD,GAAU,GAAX,KAAsB/C,GAdnC,2DAmBL3B,EAAa,SAACoE,EAAOS,EAAM5E,GAC7B,IAAMsF,EAAMnB,EAAME,MAAMkB,WAAU,SAACC,GAAD,OAAQA,EAAGC,MAAQzF,KACrD,IAAY,IAATsF,EACC,OAAY,OAATV,EACQ,eACAT,EADP,CAEIE,MAAM,GAAD,mBACEF,EAAME,MAAMqB,MAAM,EAAGJ,IADvB,CAEDV,GAFC,YAGET,EAAME,MAAMqB,MAAMJ,EAAM,OAIhC,eACAnB,EADP,CAEIE,MAAM,GAAD,mBACEF,EAAME,MAAMqB,MAAM,EAAGJ,IADvB,YAEEnB,EAAME,MAAMqB,MAAMJ,EAAM,QAM5BpB,EA9LC,WAAmC,IAAlCC,EAAiC,uDAAzBxB,EAAcnB,EAAW,uCAC9C,OAAOA,EAAO0B,MACV,IAnBS,WAoBL,OAAO,eACAiB,EADP,CAEIrB,SAAUtB,EAAOsB,WAEzB,IAtBU,YAuBN,OAAO,eACAqB,EADP,CAEIE,MAAO7C,EAAO6C,QAEtB,IA5BQ,UA6BJ,OAAO,eACAF,EADP,CAEIC,QAAS5C,EAAO4C,UAExB,IA/Ba,eAgCT,OAAO,eACAD,EADP,CAEIG,QAAS9C,EAAO8C,UAExB,IAnCY,cAoCR,OAAOvE,EAAWoE,EAAO3C,EAAOoD,KAAMpD,EAAOxB,QACjD,IApCW,aAqCP,OAAO,eACAmE,EADP,CAEII,OAAQ/C,EAAO+C,SAEvB,IAxCW,aAyCP,OAAO,eACAJ,EADP,CAEIK,aAAchD,EAAOuD,YAE7B,QACI,OAAOZ,IClDbxB,EAAe,CACjBgD,iBAAiB,EACjBC,aAAc,GACdC,YAAa,GACbC,SAAU,IA0DDC,EAAgB,SAAAjE,GACzB,IAAMkE,EAAO,IAAIC,KAEjB,OADAnE,EAAQkE,KAAR,UAAkBA,EAAKE,WAAvB,YAAqCF,EAAKG,cACnC,CACHjD,KAxEa,eAyEbpB,YAIKsE,GAAkB,WAC3B,MAAO,CACHlD,KA9Ee,mBAkFVmD,GAAuB,WAChC,MAAO,CACHnD,KAnFsB,0BAuFjBoD,GAAmB,SAACT,GAC7B,MAAO,CACH3C,KAxFiB,mBAyFjB2C,gBAIKU,GAAe,SAAAnG,GACxB,MAAO,CACH8C,KA9FY,cA+FZ9C,OAIO8D,GA1FC,WAAmC,IAAlCC,EAAiC,uDAAzBxB,EAAcnB,EAAW,uCAC9C,OAAOA,EAAO0B,MACV,IAhBY,cAiBR,OAAO,eACAiB,EADP,CAEIyB,aAAcpE,EAAOoE,eAE7B,IApBa,eAqBT,OAAO,eACAzB,EADP,CAEI2B,SAAS,GAAD,mBACD3B,EAAM2B,UADL,CAEJtE,EAAOM,YAGnB,IA3Be,iBA4BX,OAAO,eACAqC,EADP,CAEI2B,SAAU,KAElB,IA/BsB,wBAgClB,OAAO,eACA3B,EADP,CAEIwB,iBAAkBxB,EAAMwB,kBAEhC,IAnCiB,mBAoCb,OAAO,eACAxB,EADP,CAEI0B,YAAarE,EAAOqE,cAE5B,IAvCY,cAwCR,IAAMP,EAAMnB,EAAM0B,YAAYN,WAAU,SAAAC,GAAE,OAAIA,EAAGC,MAAQjE,EAAOpB,MAChE,OAAY,IAATkF,EACQ,eACAnB,EADP,CAEI0B,YAAY,GAAD,mBACJ1B,EAAM0B,YAAYH,MAAM,EAAGJ,IADvB,YAEJnB,EAAM0B,YAAYH,MAAMJ,EAAM,OAItCnB,EAEX,QACI,OAAOA,IC1DNqC,GAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,aAAcvD,EAAW,EAAXA,KAEjC8C,EAAO,IAAIC,KACXS,EAAK,IAAIT,KAAKQ,GAEdE,GAAiBX,EAAKY,UAAa,IAAIC,SAAS,EAAG,KACnDC,GAAeJ,EAAGE,UAAa,IAAIC,SAAS,EAAG,KAE/CE,GAAcf,EAAKgB,WAAa,EAAK,IAAIH,SAAS,EAAG,KACrDI,GAAYP,EAAGM,WAAa,EAAK,IAAIH,SAAS,EAAG,KAEjDK,EAAWlB,EAAKmB,cAChBC,EAASV,EAAGS,cAEZE,GAASX,EAAGR,WAAa,IAAIW,SAAS,EAAG,KACzCS,GAAWZ,EAAGP,aAAe,IAAIU,SAAS,EAAG,KAE7CU,EAAa,WACf,OAAOrE,GACH,IAAK,UACD,MAAM,GAAN,OAAU4D,EAAV,YAAwBG,EAAxB,YAAmCG,GACvC,IAAK,WAEL,QACI,MAAM,GAAN,OAAUN,EAAV,YAAwBG,EAAxB,YAAmCG,EAAnC,cAA+CC,EAA/C,YAAwDC,KAKpE,OAAGX,IAAiBG,EACZH,EAAeG,IAAgB,GAC5BC,IAAcE,GAAWC,IAAaE,EACzB,YAATlE,EACQ,iCACJ,2CAAkBmE,EAAlB,YAA2BC,GAE5BC,IAEXR,IAAcE,GAAWC,IAAaE,EAC9BG,IAED,GAAN,OAAUF,EAAV,YAAmBC,ICvClBE,GAAoB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,QAAS7E,EAAY,EAAZA,OAMxC,OAJmB6E,EAAQC,KAAI,SAAAC,GAC3B,OAAOC,GAAiBD,EAAQ/E,MAGlBiF,MAAK,SAAC9I,EAAG+I,GACvB,OAAO,IAAI7B,KAAK6B,EAAEC,UAAY,IAAI9B,KAAKlH,EAAEgJ,cAIpCH,GAAmB,SAACD,EAAQ/E,GACrC,IAAIoF,EAGAA,EADDL,EAAOK,QAAQvC,MAAQ7C,EACZ+E,EAAOM,OAEPN,EAAOK,QAGrB,IAAME,EAAY,IAAIjC,KAAS,IAAIA,KAAK+B,EAAQG,UAAc,IAE9D,MAAO,CACH/H,GAAIuH,EAAOlC,IACXhF,OAAQuH,EAAQvH,OAChB5B,MAAOmJ,EAAQnJ,MACfiB,KAAM6H,EAAOS,YAAYtI,KACzBiI,SAAUJ,EAAOS,YAAYC,UAC7BrC,KAAMQ,GAAW,CAACC,aAAckB,EAAOS,YAAYC,UAAWnF,KAAM,YACpEoF,GAAIX,EAAOS,YAAYH,SAAWrF,EAClC2F,eAAgBZ,EAAOY,eACvBL,WACAM,aAAc,CACVP,OAAQN,EAAOM,OACfD,QAASL,EAAOK,WAKfS,GAAqB,SAAC,GAA8B,IAA7B3C,EAA4B,EAA5BA,SAAU0C,EAAkB,EAAlBA,aAC1C,OAAO1C,EAAS4B,KAAI,SAAA5F,GAEhB,OAAO4G,GAAkB5G,EAAS0G,OAK7BE,GAAoB,SAAC5G,EAAS0G,GACvC,IAAIG,EAMJ,MAAO,CACHC,UAJAD,EADDH,EAAaP,OAAOxC,MAAQ3D,EAAQmG,OACpBO,EAAaP,OACVO,EAAaR,SAGRvC,IACvBhF,OAAQkI,EAAalI,OACrBwH,OAAQU,EAAanI,UAAYmI,EAAa9J,MAC9CiB,KAAMgC,EAAQhC,KACdiI,SAAUjG,EAAQuG,UAClBrC,KAAMQ,GAAW,CAACC,aAAc3E,EAAQuG,UAAWnF,KAAM,eC3C3DP,GAAe,CACjBkG,SAAS,EACTC,kBAAkB,EAClBC,YAAa,GACbC,cAAe,KACfC,aAAc,GACdC,eAAgB,KAChBzB,QAAS,GACT0B,WAAY,GACZrD,SAAU,GACVsD,SAAU,CACNC,QAAQ,EACRC,YAAa,KA0GRC,GAAe,SAAA/F,GACxB,MAAO,CACHN,KAtIY,cAuIZ2F,QAASrF,IAIJgG,GAAwB,SAAAhG,GACjC,MAAO,CACHN,KA5IuB,yBA6IvB4F,iBAAkBtF,IAIbiG,GAAmB,SAAAjG,GAC5B,MAAO,CACHN,KAlJiB,mBAmJjB6F,YAAavF,IAIRkG,GAAqB,SAAAlG,GAC9B,MAAO,CACHN,KAxJoB,qBAyJpB8F,cAAexF,IAIVmG,GAAoB,SAAAnG,GAC7B,MAAO,CACHN,KA9JkB,oBA+JlB+F,aAAczF,IAIToG,GAAsB,SAAApG,GAC/B,MAAO,CACHN,KApKoB,sBAqKpBgG,eAAgB1F,IAkBXqG,GAAkB,SAAArG,GAC3B,MAAO,CACHN,KAtLgB,kBAuLhBiG,WAAY3F,IAIPsG,GAAgB,SAAAtG,GACzB,MAAO,CACHN,KA5La,eA6Lb4C,SAAUtC,IAWLuG,GAAqB,SAAAvG,GAC9B,MAAO,CACHN,KAxMkB,oBAyMlBM,YAIKwG,GAAgB,SAAAxG,GACzB,MAAO,CACHN,KA9Mc,gBA+MdkG,SAAU5F,IAILyG,GAAoB,SAAC5K,EAAOuD,EAAQ7B,EAAWjB,GACxD,OAAO,SAAM4B,GAAN,eAAA3C,EAAAC,OAAA,gEAEC0C,EAAS6H,IAAa,IAChB5F,EAAM/C,EAAWvB,GAHxB,WAAAN,EAAA,MAIO4E,EAAI7C,aAAaC,EAAWjB,IAJnC,OAKC4B,EAAS6H,IAAa,IACtB7H,EAAS8H,IAAsB,IAC/B9H,EAASgI,GAAmB,KAC5BhI,EAAS+H,GAAiB,KAC1B/H,EAASiI,GAAkB,KAC3BjI,EAASmI,GAAgB,KAV1B,kDAYCtI,EAAagI,IAAa,GAAd,KAAyB7H,GAZtC,2DAiBEwI,GAAkB,SAAC7K,EAAOuD,GACnC,OAAO,SAAMlB,GAAN,mBAAA3C,EAAAC,OAAA,gEAEC0C,EAAS6H,IAAa,IAChB5F,EAAM/C,EAAWvB,GAHxB,WAAAN,EAAA,MAIoB4E,EAAI9C,cAJxB,OAIOgB,EAJP,OAKOsI,EAAmB3C,GAAkB,CAACC,QAAS5F,EAAKA,KAAK4F,QAAS7E,WACxElB,EAzED,CACHwB,KA1KY,cA2KZuE,QAuE0B0C,IACtBzI,EAAS6H,IAAa,IAPvB,kDASChI,EAAagI,IAAa,GAAd,KAAyB7H,GATtC,2DAcE0I,GAA6B,SAAC/K,EAAO6B,EAAUsH,GACxD,OAAO,SAAM9G,GAAN,mBAAA3C,EAAAC,OAAA,gEAEC0C,EAAS6H,IAAa,IACtB7H,EAASoI,GAAc,KACjBnG,EAAM3C,EAAY3B,GAJzB,WAAAN,EAAA,MAKoB4E,EAAI1C,YAAYC,IALpC,OAKOW,EALP,OAMOwI,EAAoB5B,GAAmB,CACzC3C,SAAUjE,EAAKA,KAAKiE,SACpB0C,iBAEJ9G,EAASoI,GAAcO,IACvB3I,EAAS6H,IAAa,IAXvB,kDAaChI,EAAagI,IAAa,GAAd,KAAyB7H,GAbtC,2DAkBE4I,GAAmB,SAACjL,EAAO6B,EAAUpB,EAAMyK,GACpD,OAAO,SAAM7I,GAAN,eAAA3C,EAAAC,OAAA,gEAEO2E,EAAM3C,EAAY3B,GAFzB,WAAAN,EAAA,MAGO4E,EAAIxC,YAAYD,EAAUpB,IAHjC,sDAKCyB,EAAagI,IAAa,GAAd,KAAyB7H,GALtC,yDA+BE8I,GAAsB,SAAC1I,GAChC,OAAO,SAAAJ,GACH,IAAK,IACOsE,EAASlE,EAATkE,KACFyE,EAAU,eACT3I,EADS,CAEZiG,SAAU/B,EACVA,KAAMQ,GAAW,CAACC,aAAcT,EAAM9C,KAAM,eAEhDxB,EAjHD,CACHwB,KAlMiB,mBAmMjBpB,QA+G8B2I,IAC5B,MAAMhJ,GACJF,EAAagI,IAAa,GAAQ9H,EAAGC,MAKpCgJ,GAAiB,SAACrL,EAAOiC,GAClC,OAAO,SAAMI,GAAN,mBAAA3C,EAAAC,OAAA,gEAEC0C,EAASmI,GAAgB,KACzBnI,EAAS6H,IAAa,IAChB5F,EAAMvC,EAAS/B,GAJtB,WAAAN,EAAA,MAKoB4E,EAAItC,UAAUC,EAASqJ,gBAL3C,OAKO9I,EALP,ODvQ0B,EC6QwB,CAC7CsH,WAAYtH,EAAKA,KAAKsH,YADpByB,ED7QoC,EAAhBzB,WAChBzB,KAAI,SAAAmD,GAClB,MAAO,CACH9J,UAAW8J,EAAKpF,IAChBhF,OAAQoK,EAAKpK,OACb5B,MAAOgM,EAAKhM,UC2QZ6C,EAASmI,GAAgBe,IACzBlJ,EAAS6H,IAAa,IAVvB,kDAYChI,EAAagI,IAAa,GAAd,KAAyB7H,GAZtC,kCDvQyB,IAAC,ICuQ1B,sBAiBIwC,GAvTC,WAAmC,IAAlCC,EAAiC,uDAAzBxB,GAAcnB,EAAW,uCAC9C,OAAOA,EAAO0B,MACV,IAhCY,cAiCR,OAAO,eACAiB,EADP,CAEI0E,QAASrH,EAAOqH,UAExB,IApCuB,yBAqCnB,OAAO,eACA1E,EADP,CAEI2E,iBAAkBtH,EAAOsH,mBAEjC,IAxCiB,mBAyCb,OAAO,eACA3E,EADP,CAEI4E,YAAavH,EAAOuH,cAE5B,IA5CoB,qBA6ChB,OAAO,eACA5E,EADP,CAEI6E,cAAexH,EAAOwH,gBAE9B,IAhDkB,oBAiDd,OAAO,eACA7E,EADP,CAEI8E,aAAczH,EAAOyH,eAE7B,IApDoB,sBAqDhB,OAAO,eACA9E,EADP,CAEI+E,eAAgB1H,EAAO0H,iBAE/B,IAxDY,cAyDR,OAAO,eACA/E,EADP,CAEIsD,QAASjG,EAAOiG,UAExB,IA5Dc,gBA6DV,IAAMnC,EAAMnB,EAAMsD,QAAQlC,WAAU,SAAAsF,GAAI,OAAIA,EAAKzK,KAAOoB,EAAOmG,OAAOvH,MAChEuH,EAAM,eACLxD,EAAMsD,QAAQnC,GADT,GAEL9D,EAAOmG,OAFF,CAGRY,eAAgBpE,EAAMsD,QAAQnC,GAAKiD,eAAiB,IAGxD,OAAY,IAATjD,EACQ,eACAnB,EADP,CAEIsD,QAAQ,CACJE,GADG,mBAEAxD,EAAMsD,QAAQ/B,MAAM,EAAGJ,IAFvB,YAGAnB,EAAMsD,QAAQ/B,MAAMJ,EAAM,OAKlCnB,EAEX,IAhFgB,kBAiFZ,OAAO,eACAA,EADP,CAEIgF,WAAY3H,EAAO2H,aAE3B,IApFa,eAqFT,OAAO,eACAhF,EADP,CAEI2B,SAAUtE,EAAOsE,WAEzB,IAxFiB,mBAyFb,OAAO,eACA3B,EADP,CAEI2B,SAAS,GAAD,mBACD3B,EAAM2B,UADL,CAEJtE,EAAOM,YAGnB,IA/FkB,oBAgGd,IAAMwD,EAAMnB,EAAMsD,QAAQlC,WAAU,SAAAsF,GAAI,OAAIA,EAAKzK,KAAOoB,EAAOgC,WACzDiE,EAAO,YAAOtD,EAAMsD,SAE1B,OAAY,IAATnC,GACCmC,EAAQnC,GAAKiD,eAAiB,EACvB,eACApE,EADP,CAEIsD,aAGDtD,EAEX,IA3Gc,gBA4GV,OAAO,eACAA,EADP,CAEIiF,SAAU,CACNC,OAAQ7H,EAAO4H,SAASC,OACxBC,YAAa9H,EAAO4H,SAASE,eAGzC,QACI,OAAOnF,IC5Hb2G,GAAWC,YAAgB,CAC7BC,KAAMC,EACNC,SAAUC,EACVC,SAAUC,GACVtI,KAAMuI,IACNC,YAAaC,KAGXC,GAAQC,YAAYZ,GAAUa,YAAgBC,MAEpDC,OAAOJ,MAAQA,GAEAA,U,8BCNAK,I,OAXA,WACX,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,mBACX,8BACA,kC,4BC4BDC,GAjCE,SAAC,GAAqD,IAAnDlM,EAAkD,EAAlDA,KAAMmM,EAA4C,EAA5CA,YAAa7H,EAA+B,EAA/BA,QAASnE,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAQjDgM,EANU,CACZ,CAAE9L,GAAI,EAAGkD,KAAM,YAAa6I,WAAY,kBAAmBC,gBAAiBH,EAAaI,gBAAiBC,MAC1G,CAAElM,GAAI,EAAGkD,KAAM,OAAQ6I,WAAY,2BAA4BC,gBAAiBH,EAAaI,gBAAiBE,MAC9G,CAAEnM,GAAI,EAAGkD,KAAM,SAAU6I,WAAY,iBAAkBC,gBAAiBH,EAAaI,gBAAiBG,OAG5E9E,KAAI,SAACmD,GAC/B,OACI,4BACIvH,KAAMuH,EAAKvH,KACXJ,KAAK,SACL6I,UAAWlB,EAAKsB,WAChBM,IAAK5B,EAAKzK,GACVsM,QAAS7B,EAAKuB,gBACdO,SAAUvI,GACV,kBAAC,KAAD,CAAiBwI,KAAM/B,EAAKwB,sBAKxC,OACI,wBACIN,UAAS,kDAA6C9L,GAAa,YAA1D,YAAyEC,GAAQ,aACzFJ,EACD,yBAAKiM,UAAU,4BACVG,KCgBFW,gBAdS,SAAC1I,GACrB,MAAO,CACH9E,MAAO8E,EAAM6G,KAAK3L,MAClB+E,QAASD,EAAM+G,SAAS9G,YAIL,SAAC1C,GACxB,OAAOoL,YAAmB,CACtB5H,yBACAC,0BACDzD,KAGQmL,EAvCW,SAAC,GAAuG,IAArG/M,EAAoG,EAApGA,KAAMiN,EAA8F,EAA9FA,OAAQ7H,EAAsF,EAAtFA,uBAAwBC,EAA8D,EAA9DA,uBAAwB9F,EAAsC,EAAtCA,MAAOY,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,KAAMkE,EAAc,EAAdA,QAe/G,OACI,kBAAC,GAAD,CACI6H,YAfY,SAACxK,GACjB,OAAOA,EAAEuL,OAAO1J,MACZ,IAAK,YACD,OAAO4B,EAAuB7F,EAAO0N,GAAS9M,EAAWC,GAC7D,IAAK,OACD,OAAOgF,EAAuB7F,EAAO0N,EAAQ9M,GAAYC,GAC7D,IAAK,SACD,OAAOiF,EAAuB9F,EAAO0N,GACzC,QACI,OAAO7H,EAAuB7F,EAAO0N,EAAQ9M,EAAWC,KAO5DkE,QAASA,EACTtE,KAAMA,EACNG,UAAWA,EACXC,KAAMA,OCKH+M,GA7BF,SAAC,GAAyB,IAAvB5I,EAAsB,EAAtBA,MAAOvB,EAAe,EAAfA,SACnB,OACI,yBAAKiJ,UAAU,uBACV1H,EAAM6I,OACP,wBAAInB,UAAU,cAEN1H,EAAMqD,KAAI,YAAmC,IAAjCjC,EAAgC,EAAhCA,IAAK3F,EAA2B,EAA3BA,KAAMG,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,KAC9B,OAAO,kBAAC,GAAD,CACKJ,KAAMA,EACNG,UAAWA,EACXC,KAAMA,EACNuM,IAAKhH,EACLsH,OAAQtH,QAI9B3C,EACF,yBAAKiJ,UAAU,uBACX,kBAAC,GAAD,OAGJ,yBAAKA,UAAU,sBAAsBoB,KAAK,SAA1C,kICgCGN,gBAhBS,SAAC1I,GACrB,MAAO,CACH9E,MAAO8E,EAAM6G,KAAK3L,MAClBgF,MAAOF,EAAM+G,SAAS7G,MACtBvB,SAAUqB,EAAM+G,SAASpI,SACzByB,OAAQJ,EAAM+G,SAAS3G,OACvBC,aAAcL,EAAM+G,SAAS1G,iBAIV,SAAC9C,GACxB,OAAOoL,YAAmB,CACtB9H,qBACDtD,KAGQmL,EAnDO,SAAC,GAAyE,IAAvExI,EAAsE,EAAtEA,MAAOvB,EAA+D,EAA/DA,SAAUkC,EAAqD,EAArDA,kBAAmB3F,EAAkC,EAAlCA,MAAOkF,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAExE4I,qBAAU,WACNpI,EAAkB3F,KACnB,CAAC2F,EAAmB3F,IAEvB,IAoBMgO,EApBc,SAAChJ,GACjB,MAAc,KAAXE,EAAsBF,EAClBA,EAAMiJ,QAAO,SAAC9H,GACjB,OAAOA,EAAG1F,KAAK6K,cAAc4C,SAAShJ,EAAOoG,kBAiBjC6C,CAbA,SAACnJ,GACjB,OAAOG,GACH,IAAK,MACD,OAAOH,EACX,IAAK,SACD,OAAOA,EAAMiJ,QAAO,SAAA9H,GAAE,OAAgB,IAAZA,EAAGtF,QACjC,IAAK,OACD,OAAOmE,EAAMiJ,QAAO,SAAA9H,GAAE,OAAgB,IAAZA,EAAGtF,QACjC,QACI,OAAOmE,GAIaoJ,CAAYpJ,IAE5C,OACI,kBAAC,GAAD,CACIA,MAAOgJ,EACPvK,SAAUA,OCpBP4K,GAhBA,SAAC,GAAoC,IAAlCnJ,EAAiC,EAAjCA,OAAQoJ,EAAyB,EAAzBA,mBACtB,OACI,yBAAK5B,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,WAEJ,2BACI7I,KAAK,OACL6I,UAAU,eACV6B,SAAUD,EACVpK,MAAOgB,MCqBRsI,gBAZS,SAAC1I,GACrB,MAAO,CACHI,OAAQJ,EAAM+G,SAAS3G,WAIJ,SAAC7C,GACxB,OAAOoL,YAAmB,CACtBjI,eACDnD,KAGQmL,EAzBS,SAAC,GAA6B,IAA3BtI,EAA0B,EAA1BA,OAAQM,EAAkB,EAAlBA,YAM/B,OACI,kBAAC,GAAD,CACIN,OAAQA,EACRoJ,mBAPmB,SAAClM,GACxBoD,EAAYpD,EAAEuL,OAAOzJ,aCmBdsK,GA5BA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,mBAAoBtJ,EAAmB,EAAnBA,aAQ5BuJ,EANgB,CAClB,CAAEzK,KAAM,MAAO0K,MAAO,OACtB,CAAE1K,KAAM,SAAU0K,MAAO,UACzB,CAAE1K,KAAM,OAAQ0K,MAAO,SAGGtG,KAAI,YAAoB,IAAlBpE,EAAiB,EAAjBA,KAAM0K,EAAW,EAAXA,MAChCC,EAAWzJ,IAAiBlB,EAClC,OACI,4BACIA,KAAMA,EACNmJ,IAAKnJ,EACLyI,UAAS,uBAAkBkC,GAAY,UACvCvB,QAASoB,GACRE,MAKb,OACI,yBAAKjC,UAAU,kBACVgC,ICSElB,gBAZS,SAAC1I,GACrB,MAAO,CACHK,aAAcL,EAAM+G,SAAS1G,iBAIV,SAAC9C,GACxB,OAAOoL,YAAmB,CACtBhI,eACDpD,KAGQmL,EA3BS,SAAC,GAAmC,IAAjC/H,EAAgC,EAAhCA,YAAaN,EAAmB,EAAnBA,aAQpC,OACI,kBAAC,GAAD,CACIsJ,mBARmB,SAACrM,GACrB+C,IAAiB/C,EAAEuL,OAAO1J,MACzBwB,EAAYrD,EAAEuL,OAAO1J,OAOrBkB,aAAcA,OCLX0J,GATI,WACf,OACI,yBAAKnC,UAAU,gCACX,kBAAC,GAAD,MACA,kBAAC,GAAD,QCWGoC,GAjBI,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,QAAS9K,EAA4B,EAA5BA,MAAOD,EAAqB,EAArBA,KAAMgL,EAAe,EAAfA,SACjD,OACI,yBAAKvC,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAoBqC,IAExC,2BACIlL,KAAK,OACL6I,UAAU,eACV6B,SAAUS,EACV9K,MAAOA,EACPD,KAAMA,EACNiL,WAAUD,MCUXE,GApBM,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,kBAAmBnK,EAAmD,EAAnDA,QAASF,EAA0C,EAA1CA,QAASa,EAAiC,EAAjCA,oBAAqB5F,EAAY,EAAZA,MAC9E,OACI,yBAAK0M,UAAU,UACX,kBAAC,GAAD,CACIqC,QAAS,sEACTC,QAASI,EACTlL,MAAOe,EACPhB,KAAM,YACV,4BACIJ,KAAK,SACL6I,UAAU,oBACVY,SAAUvI,IAAYE,EAAQ4I,OAC9BR,QAAS,kBAAMzH,EAAoB5F,EAAOiF,KAJ9C,SC0BGuI,gBAfS,SAAC1I,GACrB,MAAO,CACHC,QAASD,EAAM+G,SAAS9G,QACxBE,QAASH,EAAM+G,SAAS5G,QACxBjF,MAAO8E,EAAM6G,KAAK3L,UAIC,SAACqC,GACxB,OAAOoL,YAAmB,CACtB7H,sBACAP,gBACDhD,KAGQmL,EA/Be,SAAC,GAAoE,IAAlExN,EAAiE,EAAjEA,MAAO+E,EAA0D,EAA1DA,QAASa,EAAiD,EAAjDA,oBAAqBP,EAA4B,EAA5BA,aAAcJ,EAAc,EAAdA,QAMhF,OACI,kBAAC,GAAD,CACIA,QAASA,EACTmK,kBAPkB,SAAChN,GACvBiD,EAAajD,EAAEuL,OAAOzJ,QAOlBa,QAASA,EACT/E,MAAOA,EACP4F,oBAAqBA,OCFlByJ,GAXE,WAEb,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QC2CGC,GArDE,SAAC,GAAyE,IAAvE7L,EAAsE,EAAtEA,SAAUlE,EAA4D,EAA5DA,MAAOO,EAAqD,EAArDA,SAAUkE,EAA2C,EAA3CA,cAAeuL,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAEhEC,EAAe,SAACrN,GAClB4B,EAAc5B,EAAEuL,OAAO1J,KAAM7B,EAAEuL,OAAOzJ,QAG1C,OACI,yBAAKwI,UAAU,QACX,yBAAKA,UAAU,aACX,8BACI,yBAAKA,UAAU,cACX,2BAAOgD,QAAQ,SAAf,SACA,2BACI3O,GAAG,QACHkD,KAAK,QACLJ,KAAK,OACL6I,UAAU,eACVxI,MAAOqL,EACPhB,SAAUkB,KAGlB,yBAAK/C,UAAU,cACX,2BAAOgD,QAAQ,QAAf,wCACA,2BACI3O,GAAG,OACHkD,KAAK,OACLJ,KAAK,WACL6I,UAAU,eACVxI,MAAOsL,EACPjB,SAAUkB,KAGlB,4BACI5L,KAAK,SACLwJ,QAAS9N,EACT+N,SAAU7J,EACViJ,UAAU,wBAJd,kCAQA,4BACIW,QAASvN,EACTwN,SAAU7J,EACViJ,UAAU,kBAHd,0ECgBLc,gBARS,SAAC1I,GACrB,MAAO,CACHrB,SAAUqB,EAAM6G,KAAKlI,SACrB8L,WAAYzK,EAAM6G,KAAKjI,KAAKlE,MAC5BgQ,UAAW1K,EAAM6G,KAAKjI,KAAKC,SAbR,SAACtB,GACxB,OAAOoL,YAAmB,CACtBpJ,oBACAG,uBACAR,gBACAW,mBACDtC,KAWQmL,EAlDW,SAACmC,GAAW,IAG9BlM,EAOAkM,EAPAlM,SACAY,EAMAsL,EANAtL,kBACAG,EAKAmL,EALAnL,qBACAG,EAIAgL,EAJAhL,gBACAX,EAGA2L,EAHA3L,cACAuL,EAEAI,EAFAJ,WACAC,EACAG,EADAH,UAGJzB,qBAAU,WACNpJ,MACD,CAACA,IAUJ,OAAO,kBAAC,GAAD,CACKlB,SAAUA,EACVlE,MAVE,WACV8E,EAAkBkL,EAAYC,IAUtB1P,SAPK,WACb0E,EAAqB+K,EAAYC,IAOzBxL,cAAeA,EACfuL,WAAYA,EACZC,UAAWA,OC5BZI,GANE,WACb,OACI,kBAAC,GAAD,O,qBCJFC,GAAY,WAEd,OAAOC,KAAe,yCCeXC,I,cAfA,SAAC,GAAgD,IAA9C3O,EAA6C,EAA7CA,OAAQ4O,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,SAAUrH,EAAe,EAAfA,SAC5C,OACI,yBAAK6D,UAAS,yCACJwD,EAAW,sBAAwB,GAD/B,6BAEJrH,EAAW,6BAA+B,GAFtC,6BAGJmH,EAAQ,qBAAuB,GAH3B,mBAKV,yBACIG,IAAK/O,GAAkB,6DACvBsL,UAAU,iBACVuD,IAAKA,IAAY7O,GAAkB,kBCCpCgP,GAXS,SAAC,GAAgC,IAAD,IAA9B5N,KAAOpB,EAAuB,EAAvBA,OAAQD,EAAe,EAAfA,SACrC,OACI,wBAAIuL,UAAU,6BACV,kBAAC,GAAD,CAAQtL,OAAQA,EAAQ6O,IAAK9O,IAC7B,0BAAMuL,UAAU,YACXvL,KCgCFqM,gBAbS,SAAA1I,GACpB,MAAO,CACH0B,YAAa1B,EAAMiH,SAASvF,YAC5BF,gBAAiBxB,EAAMiH,SAASzF,oBAIb,SAAAjE,GACvB,OAAOoL,YAAmB,CACtBzG,yBACD3E,KAGQmL,EAjCK,SAAC,GAA4D,IAA1DhH,EAAyD,EAAzDA,YAAaF,EAA4C,EAA5CA,gBAAiBU,EAA2B,EAA3BA,qBACjD,OACI,yBAAK0F,UAAU,gBACX,0BACIA,UAAU,uBACVW,QAASrG,GAFb,wEAGuBR,EAAYqH,OAHnC,IAIQ,0BAAMnB,UAAU,gCAAgCpG,EAAkB,IAAM,MAEhF,wBAAIoG,UAAS,6BAAwBpG,GAAmB,8BAEhDE,EAAcA,EAAY6B,KAAI,SAAClC,GAC3B,OAAO,kBAAC,GAAD,CAAiBiH,IAAKjH,EAAGC,IAAK5D,KAAM2D,EAAG5C,YAC7C,QCGV8M,I,OAnBC,SAAC,GAAsB,IAApB7E,EAAmB,EAAnBA,KAAMjI,EAAa,EAAbA,OAErB,OACI,yBAAKmJ,UAAS,kBAAanJ,IAAWiI,EAAKjC,UAAY,eACnD,yBAAKmD,UAAU,oBACX,yBAAKA,UAAU,mBACX,kBAAC,GAAD,CAAQsD,OAAO,EAAM5O,OAAQoK,EAAKpK,OAAQ6O,IAAKzE,EAAK5C,SACpD,8BAAO4C,EAAK5C,SAEhB,yBAAK8D,UAAU,iBAEVlB,EAAK/K,OAGd,0BAAMiM,UAAU,gBAAgBlB,EAAK7E,SCTlC2J,GARI,SAAC,GAAwB,IAAtBzM,EAAqB,EAArBA,KAAM0M,EAAe,EAAfA,SACxB,OACI,yBAAK7D,UAAS,sBAAiB7I,IAC1B0M,IC6BEC,GA3BE,SAAC,GAA+B,IAAD,IAA5B/J,gBAA4B,MAAjB,GAAiB,EAAblD,EAAa,EAAbA,OAEzBkN,EAAcC,mBAEpB3C,qBAAU,WACN0C,EAAYE,QAAQC,SAAS,EAAGH,EAAYE,QAAQE,iBAGxD,IAAI9P,EAAK,EACH+P,EAAiBrK,EAASoH,OAAS,EACjCpH,EAAS4B,KAAI,SAAAmD,GACT,OAAO,kBAAC,GAAD,CAAS4B,IAAKrM,IAAMyK,KAAMA,EAAMjI,OAAQA,OAI/C,kBAAC,GAAD,CAAYM,KAAK,WAAjB,yIAKZ,OACI,yBAAK6I,UAAU,WAAWqE,IAAKN,GAC1BK,I,mBC2DEE,I,cAjFM,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,cAAuE,IAAxDC,uBAAwD,MAAtC,aAAsC,MAA5BnH,gBAA4B,MAAjB,GAAiB,EAAb3I,EAAa,EAAbA,OAAa,EAE7D+P,mBAAS,IAFoD,oBAEpF1O,EAFoF,KAE3E2O,EAF2E,OAGvDD,oBAAS,GAH8C,oBAGpFE,EAHoF,KAGxEC,EAHwE,KA0B3F,OACI,yBAAK5E,UAAU,iBACX,kBAAC,GAAD,CAAQtL,OAAQA,IAChB,yBAAKsL,UAAU,0BACX,8BACIzI,KAAK,OACLC,MAAOzB,EACP8L,SA5BM,SAACnM,GACnBgP,EAAWhP,EAAEuL,OAAOzJ,OACjBgN,GACCA,KA0BQK,YAAY,+HAChB,4BACI7E,UAAU,+BACVW,QAfS,WACrBiE,GAAeD,KAeH,yBAAKG,QAAQ,MAAMC,MAAM,6BAA6BC,MAAM,+BAA+BC,EAAE,MAAMC,EAAE,MACjGC,QAAQ,cAAcC,MAAM,YAC5B,2BACI,2BACI,2BACI,0BAAMC,EAAE,gUAGR,0BAAMA,EAAE,uLAER,0BAAMA,EAAE,oMAER,0BAAMA,EAAE,sLAQxBV,EACI,yBAAK3E,UAAU,yBACX,kBAAC,KAAD,CAAQsF,QAAM,EAACC,SA3CtB,SAAA7P,GACb,IAAI8P,EAAQ9P,EAAE4P,OACdZ,EAAW3O,EAAUyP,OA2CL,MAGZ,yBAAKxF,UAAU,8BAEP3C,EAASC,QACT,0BAAM0C,UAAU,yBAAhB,UAA4C3C,EAASE,YAArD,oCAEJ,4BACIyC,UAAU,0BACVW,QA5DM,WAClB4D,EAAcxO,GACd2O,EAAW,KA2DC9D,SAAsB,KAAZ7K,GAHd,8DC7DD0P,GAVF,SAAC,GAAiD,IAA/ClB,EAA8C,EAA9CA,cAAexK,EAA+B,EAA/BA,SAAUrF,EAAqB,EAArBA,OAAQmC,EAAa,EAAbA,OAC7C,OACI,yBAAKmJ,UAAU,oBACX,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUjG,SAAUA,EAAUlD,OAAQA,IACtC,kBAAC,GAAD,CAAc0N,cAAeA,EAAe7P,OAAQA,MCW1DgR,GAAgB,SAAC,GAA0G,IAAxGlH,EAAuG,EAAvGA,OAAQ3H,EAA+F,EAA/FA,OAAQnC,EAAuF,EAAvFA,OAAQqF,EAA+E,EAA/EA,SAAUS,EAAqE,EAArEA,aAAcD,EAAuD,EAAvDA,iBAAkBP,EAAqC,EAArCA,cAAeK,EAAsB,EAAtBA,gBAEtGgH,qBAAU,WAIN,OAFA7C,EAAOmH,KAAK,YAAa,CAAE9O,WAEpB,WACH2D,EAAagE,EAAOnK,IACpBgG,IACAmE,EAAOoH,gBAGZ,CAAC/O,EAAQ2H,EAAQhE,EAAcH,IAElCgH,qBAAU,WAEN,IAAM3K,EAAa,SAAC,GAAU,IAATrC,EAAQ,EAARA,GACjBmG,EAAanG,IAGjBmK,EAAOqH,GAAG,mBAAoBnP,GAE9B,IAAMoP,EAAU,SAAC/P,GACbiE,EAAcjE,IAGlByI,EAAOqH,GAAG,mBAAoBC,GAE9B,IAAMC,EAA0B,SAAC,GAAmB,IAAlBjM,EAAiB,EAAjBA,YAC9BS,EAAiBT,IAKrB,OAFA0E,EAAOqH,GAAG,mCAAoCE,GAEvC,WACHvH,EAAOwH,IAAI,mBAAoBtP,GAC/B8H,EAAOwH,IAAI,mBAAoBF,GAC/BtH,EAAOwH,IAAI,mCAAoCD,MAGpD,CAACvL,EAAcR,EAAeO,EAAkBiE,IAMnD,OACI,kBAAC,GAAD,CACI+F,cANc,SAACxQ,GACnByK,EAAOmH,KAAK,oBAAqB,CAAE9O,SAAQ9C,UAMvCgG,SAAUA,EACVrF,OAAQA,EACRmC,OAAQA,KAuBLiK,gBAlBS,SAAC1I,GACrB,MAAO,CACHvB,OAAQuB,EAAM6G,KAAKpI,OACnBnC,OAAQ0D,EAAM6G,KAAKvK,OACnBqF,SAAU3B,EAAMiH,SAAStF,SACzBtF,SAAU2D,EAAM6G,KAAKxK,aAIF,SAAAkB,GACvB,OAAOoL,YAAmB,CACtBvG,gBACAD,oBACAP,gBACAK,oBACD1E,KAGQmL,EAxFc,SAACmC,GAG1B,OADqBA,EAAbxO,SAQD,kBAAC,GAAkBwO,GALlB,kBAAC,GAAD,CAAY9L,KAAK,UAAjB,wcCCG8O,GATE,WAEb,IAAMzH,EAAS2E,KAEf,OACI,kBAAC,GAAD,CAAM3E,OAAQA,KCNP0H,GAFQC,0BCuBRC,I,qBArBY,WAAO,IAAD,EAMzBC,qBAAWC,IAHXtJ,EAHyB,EAGzBA,YACAU,EAJyB,EAIzBA,iBACAD,EALyB,EAKzBA,sBAGJ,OACI,yBAAKuC,UAAU,mCACX,2BACI6E,YAAY,mIACZ1N,KAAK,OACL6I,UAAU,eACVxI,MAAOwF,EACP6E,SAAW,SAACnM,GAAD,OAAOgI,EAAiBhI,EAAEuL,OAAOzJ,QAC5C+O,QAAU,WAAO9I,GAAsB,SCcxC+I,GA7BU,SAACvD,GAAW,IAEzBnE,EAASmE,EAATnE,KAFwB,EAO5BuH,qBAAWC,IAFXrJ,EAL4B,EAK5BA,cACAU,EAN4B,EAM5BA,mBAGJ,OACI,4BACI,2BAAOqF,QAASlE,EAAK9J,WACjB,kBAAC,GAAD,CACIsO,OAAO,EACP5O,OAAQoK,EAAKpK,OACb6O,IAAKzE,EAAKhM,QACd,8BAAOgM,EAAKhM,OACZ,2BACIuB,GAAIyK,EAAK9J,UACTuC,KAAK,cACLJ,KAAK,QACLK,MAAOsH,EAAK9J,UACZyR,QAASxJ,IAAkB6B,EAAK9J,UAChC6M,SAAU,SAACnM,GAAD,OAAOiI,EAAmBjI,EAAEuL,OAAOzJ,aCKlDkP,GA7BW,WAAO,IAAD,EAQxBL,qBAAWC,IALXxJ,EAHwB,EAGxBA,QACAI,EAJwB,EAIxBA,aACAD,EALwB,EAKxBA,cACAW,EANwB,EAMxBA,kBACA7I,EAPwB,EAOxBA,aAGJ,OACI,yBAAKiL,UAAU,sBACX,8BACI6E,YAAY,0GACZtN,KAAK,aACLC,MAAO0F,EACP2E,SAAU,SAACnM,GAAQkI,EAAkBlI,EAAEuL,OAAOzJ,QAC9CoJ,YAAW9D,GAAWG,KAC1B,4BACI0D,QAAS,kBAAM5L,EAAakI,EAAeC,IAC3C0D,YAAW9D,GAAYG,GAAiBC,EAAaiE,OAAS,GAC9DnB,UAAU,8BACV7I,KAAK,UAJT,mHC6CGwP,GA3DM,SAAC1D,GAAW,IAAD,EAWxBoD,qBAAWC,IARXhT,EAHwB,EAGxBA,MACAwJ,EAJwB,EAIxBA,QACAC,EALwB,EAKxBA,iBACAC,EANwB,EAMxBA,YACAI,EAPwB,EAOxBA,WAEAuB,EATwB,EASxBA,eACAlB,EAVwB,EAUxBA,sBAGJ,OACI,yBAAKuC,UAAS,yBAAoBjD,EAAmB,wBAA0B,KAC3E,4BACIiD,UAAU,yCACVY,WAAU5D,EAAYmE,QAAU,GAChCR,QAAS,kBAAMhC,EAAerL,EAAO0J,KAHzC,wCAKA,4BACIgD,UAAU,kBACV7I,KAAK,SACLwJ,QAAU,WAAOlD,GAAsB,KACvC,yBAAKqH,QAAQ,MAAMC,MAAM,6BAA6BC,MAAM,+BAA+BC,EAAE,MAAMC,EAAE,MAAMC,QAAQ,sBAAsBC,MAAM,YAC3I,2BACI,2BACI,0BAAMC,EAAE,qlBAPxB,0FAcA,yBAAKrF,UAAU,iBACP5C,EAAW+D,OACX,wBAAInB,UAAU,uBAEN5C,EAAWzB,KAAI,SAAAmD,GACX,OACI,kBAAC,GAAD,CAAkB4B,IAAK5B,EAAK9J,UAAW8J,KAAMA,QAIrDhC,EACR,kBAAC,GAAD,MACEE,EAAYmE,OACd,kBAAC,GAAD,CAAYhK,KAAK,WAAjB,gGAEA,kBAAC,GAAD,CAAYA,KAAK,WAAjB,yKAGJ,kBAAC,GAAD,SC7CDyP,GATO,WAClB,OACI,yBAAK5G,UAAU,mBACX,kBAAC,GAAD,MACA,kBAAC,GAAD,QC+BG6G,I,OAlCI,SAAC5D,GAAW,IAEnBnE,EAASmE,EAATnE,KAFkB,EAOtBuH,qBAAWC,IAFXnJ,EALsB,EAKtBA,eACA2J,EANsB,EAMtBA,aAGJ,OACI,wBACI9G,UAAS,wBAAmBlB,EAAKzK,KAAO8I,EAAiB,uBAAyB,IAClFwD,QAAS,kBAAMmG,EAAahI,EAAKzK,GAAIyK,EAAKrC,gBAC1C,kBAAC,GAAD,CAAQ+G,UAAU,EAAMrH,SAAU2C,EAAK3C,SAAUmH,MAAM,OAAO5O,OAAQoK,EAAKpK,OAAQ6O,IAAKzE,EAAKhM,QAC7F,yBAAKkN,UAAU,UACX,yBAAKA,UAAU,2CACX,0BAAMA,UAAU,iBAAiBlB,EAAKhM,OACtC,0BAAMkN,UAAU,mBAAmBlB,EAAK7E,OAE5C,0BAAM+F,UAAS,0BAAqBlB,EAAKvC,GAAKuC,EAAKtC,eAAiB,4BAA8B,0BAA4B,KAEtHsC,EAAK/K,KAAKoN,OAAS,GAAnB,UAA2BrC,EAAK/K,KAAKgT,UAAU,EAAG,IAAlD,OAA6DjI,EAAK/K,OAK1E+K,EAAKtC,eAAiB,IAAMsC,EAAKvC,IAAO,yBAAKyD,UAAU,wBACnC,8BAAOlB,EAAKtC,oBCQjCwK,GAhCC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAAyB,EAEXZ,qBAAWC,IAAhC5K,EAFgC,EAEhCA,QAASoB,EAFuB,EAEvBA,QAEjB,OACI,yBAAKkD,UAAS,kBAAaiH,EAAqB,wBAA0B,KACtE,kBAAC,GAAD,MAEIvL,EAAQyF,OACR,wBAAInB,UAAU,iBAENtE,EAAQC,KAAI,SAAAmD,GACR,OACI,kBAAC,GAAD,CACI4B,IAAK5B,EAAKzK,GACVyK,KAAMA,QAMxBhC,EACF,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAY3F,KAAK,WAAjB,+LCiCD6P,GAxDC,SAAC/D,GAAW,IAAD,EAEaoD,qBAAWC,IAAvCxJ,EAFe,EAEfA,QAASK,EAFM,EAENA,eAFM,EAI6BsH,oBAAS,GAJtC,oBAIhBwC,EAJgB,KAIIC,EAJJ,OAiBnBjE,EAAMkE,cANNpN,EAXmB,EAWnBA,SACAlD,EAZmB,EAYnBA,OACA0N,EAbmB,EAanBA,cACA7P,EAdmB,EAcnBA,OACA8P,EAfmB,EAenBA,gBACAnH,EAhBmB,EAgBnBA,SAGJ,OACI,yBAAK2C,UAAU,OACX,yBAAKA,UAAU,6BACX,4BACIA,UAAU,wCACVW,QAlBG,WACfuG,GAAuBD,KAoBPA,EAAsB9J,GAAkBA,EAAegE,OAAS,EAAI,wJAAkC,4EAAmB,yFAGjI,kBAACiG,GAAD,CAAcH,mBAAoBA,KAEtC,yBAAKjH,UAAU,iEAEP7C,GAAkBpD,EAASoH,OAAS,EAChC,oCACI,kBAAC,GAAD,CAAUpH,SAAUA,EAAUlD,OAAQA,IACtC,kBAAC,GAAD,CACIwG,SAAUA,EACVmH,gBAAiBA,EACjBD,cAAeA,EACf7P,OAAQA,KAGhB,yBAAKsL,UAAU,6BAEPlD,EAAU,kBAAC,GAAD,MAAa,kBAAC,GAAD,CAAY3F,KAAK,WAAjB,2HCzD1CkQ,GAAa,SAACxQ,EAAQsG,EAAgBzB,GAC/C,IACMe,EADSf,EAAQ6F,QAAO,SAAAzC,GAAI,OAAIA,EAAKzK,KAAO8I,KACtB,GAAGV,aAE/B,OAAGA,EAAaP,OAAOxC,MAAQ7C,EAAe4F,EAAaR,QAC/CQ,EAAaP,QCsPd4E,gBA1CS,SAAA1I,GACpB,MAAO,CACH0E,QAAS1E,EAAMoH,YAAY1C,QAC3BI,aAAc9E,EAAMoH,YAAYtC,aAChCE,WAAYhF,EAAMoH,YAAYpC,WAC9BH,cAAe7E,EAAMoH,YAAYvC,cACjCD,YAAa5E,EAAMoH,YAAYxC,YAC/BtB,QAAStD,EAAMoH,YAAY9D,QAC3BqB,iBAAkB3E,EAAMoH,YAAYzC,iBACpCI,eAAgB/E,EAAMoH,YAAYrC,eAClCE,SAAUjF,EAAMoH,YAAYnC,SAE5BtD,SAAU3B,EAAMoH,YAAYzF,SAC5BlD,OAAQuB,EAAM6G,KAAKpI,OACnBnC,OAAQ0D,EAAM6G,KAAKvK,OACnBpB,MAAO8E,EAAM6G,KAAK3L,MAClBmB,SAAU2D,EAAM6G,KAAKxK,SACrB3B,MAAOsF,EAAM6G,KAAKnM,UAIC,SAAA6C,GACvB,OAAOoL,YAAmB,CACtBtD,yBACAC,oBACAC,sBACAC,qBACAa,uBACAZ,uBACAG,sBACAD,iBACAE,iBAEAE,mBACAE,8BACAM,kBACAJ,oBACAL,sBAEDvI,KAGQmL,EAlOU,SAACmC,GAAW,IAG7BzE,EAiCAyE,EAjCAzE,OAEA9C,EA+BAuH,EA/BAvH,QACAoB,EA8BAmG,EA9BAnG,QACAK,EA6BA8F,EA7BA9F,eACAU,EA4BAoF,EA5BApF,oBACAb,EA2BAiG,EA3BAjG,YACAD,EA0BAkG,EA1BAlG,iBACAK,EAyBA6F,EAzBA7F,WACAH,EAwBAgG,EAxBAhG,cACAC,EAuBA+F,EAvBA/F,aACAG,EAsBA4F,EAtBA5F,SACAK,EAqBAuF,EArBAvF,iBACAD,EAoBAwF,EApBAxF,sBACAE,EAmBAsF,EAnBAtF,mBACAC,EAkBAqF,EAlBArF,kBACAa,EAiBAwE,EAjBAxE,oBACAT,EAgBAiF,EAhBAjF,mBACAD,EAeAkF,EAfAlF,cACAE,EAcAgF,EAdAhF,cAEAE,EAYA8E,EAZA9E,gBACAE,EAWA4E,EAXA5E,2BACAM,EAUAsE,EAVAtE,eACAJ,EASA0E,EATA1E,iBACAL,EAQA+E,EARA/E,kBAEAnE,EAMAkJ,EANAlJ,SACAlD,EAKAoM,EALApM,OACAnC,EAIAuO,EAJAvO,OACAD,EAGAwO,EAHAxO,SACA3B,EAEAmQ,EAFAnQ,MACAQ,EACA2P,EADA3P,MAgDEgU,EAAaC,uBAAY,SAAAzR,GAC3B2I,EAAoB3I,EAAKC,SACzBoI,EAAgB7K,EAAOuD,KACxB,CAACsH,EAAiBM,EAAqBnL,EAAOuD,IAE3C2Q,EAAiBD,uBAAY,SAAAzR,GAC/BkI,EAAmBlI,EAAKX,YACzB,CAAC6I,IAEEyJ,EAAgBF,uBAAY,WAC9BpJ,EAAgB7K,EAAOuD,KACxB,CAACsH,EAAiB7K,EAAOuD,IAatB6Q,EAAcH,uBAAY,SAAAzR,GACzBA,EAAKd,YAAc6B,IAClB8Q,cAAc7H,OAAO8H,kBACrB3J,EAAc,CAAEX,QAAQ,EAAMC,YAAazH,EAAKyH,cAChDuC,OAAO8H,iBAAmBC,YAAW,WACjC5J,EAAc,CAAEX,QAAQ,EAAOC,YAAa,OAC7C,QAER,CAACU,EAAepH,IAEnBwK,qBAAU,WAIN,OAHAlD,EAAgB7K,EAAOuD,GACvB2H,EAAOmH,KAAK,eAAgB,CAAE9O,WAEvB,WACHkH,EAAc,IACdF,EAAoB,IACpBW,EAAOoH,gBAGZ,CAACzH,EAAiBJ,EAAeF,EAAqBvK,EAAOuD,EAAQ2H,IAExE6C,qBAAU,WAON,OALA7C,EAAOqH,GAAG,sBAAuByB,GACjC9I,EAAOqH,GAAG,0BAA2B2B,GACrChJ,EAAOqH,GAAG,yBAA0B4B,GACpCjJ,EAAOqH,GAAG,wBAAyB6B,GAE5B,WACHlJ,EAAOwH,IAAI,sBAAuBsB,GAClC9I,EAAOwH,IAAI,0BAA2BwB,GACtChJ,EAAOwH,IAAI,yBAA0ByB,GACrCjJ,EAAOwH,IAAI,wBAAyB0B,MAGzC,CAACA,EAAaJ,EAAYE,EAAgBC,EAAejJ,IAE5D,IAAMsJ,EAAe,CACjBjR,SACAvD,QACAoI,UACAoB,UACAK,iBACAH,cACAD,mBACAK,aACAH,gBACAC,eACAG,WACAK,mBACAD,wBACAE,qBACAC,oBACAe,iBACA5J,aA5HiB,SAACkI,EAAeC,GACjCgB,EAAkB5K,EAAOuD,EAAQoG,EAAeC,GAC3C6K,MAAK,WACF5J,EAAgB7K,EAAOuD,GACvBkH,EAAc,IACdF,EAAoB,IACpBW,EAAOmH,KAAK,yBAA0B,CAClC3Q,UAAWiI,QAuHvB6J,aAlHiB,SAAC3R,EAAUsH,GAC5B+B,EAAOmH,KAAK,4BAA6B,CACrCxQ,SAAUgI,IAEdqB,EAAOmH,KAAK,yBAA0B,CAClCxQ,aAEJ0I,EAAoB1I,GACpBkJ,EAA2B/K,EAAO6B,EAAUsH,KA6G1C0K,EAAgB,CAClBtQ,SACAnC,SACAqF,WACAwK,cA9GkB,SAACxQ,GAEnB,IAAMkI,EAAUoL,GAAWxQ,EAAQsG,EAAgBzB,GAE7CxF,EAAO,CACTW,SACAnC,SACAD,WACA3B,SAGJyL,EAAiBjL,EAAO6J,EAAgBpJ,GACnCgU,MAAK,WACFvJ,EAAOmH,KAAK,iCAAkC,CAC1CzP,OACAnC,OACAoB,SAAUgI,EACVnI,UAAWiH,EAAQvC,UA8F/B8K,gBA5EoB,WACpB,IAAMvI,EAAUoL,GAAWxQ,EAAQsG,EAAgBzB,GAC7CQ,EAASmL,GAAWpL,EAAQvC,IAAKyD,EAAgBzB,GAEvD8C,EAAOmH,KAAK,oBAAqB,CAC7BpI,YAAarB,EAAOzH,UAAYyH,EAAOpJ,MACvCkC,UAAWiH,EAAQvC,IACnBvE,SAAUgI,KAsEdE,YAGJ,OACI,kBAAC,GAAe2K,SAAhB,CAAyBxQ,MAAOsQ,GAC5B,kBAAC,GAAD,CAASX,cAAeA,QC/LrBc,GAPK,WAEhB,IAAMzJ,EAAS2E,KAEf,OAAO,kBAAC,GAAD,CAAS3E,OAAQA,KC+Bb0J,I,OApCE,SAAC,GAA4F,IAA1F5U,EAAyF,EAAzFA,MAAOR,EAAkF,EAAlFA,MAAO2B,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,OAAQyT,EAAyD,EAAzDA,cAAenQ,EAA0C,EAA1CA,oBAAqBD,EAAqB,EAArBA,eACpF,OACI,yBAAKiI,UAAU,iBACX,wBAAIA,UAAU,sCACV,wBAAIA,UAAU,mBACV,kBAAC,GAAD,CACIqC,QAAS,QACT7K,MAAO1E,GAAgB,GACvByE,KAAM,QACNgL,UAAU,KAElB,wBAAIvC,UAAU,mBACV,kBAAC,GAAD,CACIqC,QAAS,6CACTC,QAAS6F,EACT3Q,MAAO/C,GAAsB,GAC7B8C,KAAM,cAEd,wBAAIyI,UAAU,mBACV,kBAAC,GAAD,CACIqC,QAAS,yFACTC,QAAS6F,EACT3Q,MAAO9C,GAAkB,GACzB6C,KAAM,YAEd,wBAAIyI,UAAU,mBACV,4BAAQW,QAAS,kBAAM3I,EAAoB,CAAC1E,QAAOmB,WAAUC,YAAUsL,UAAU,+BAAjF,2DAEJ,wBAAIA,UAAU,mBACV,4BAAQW,QAAS,kBAAM5I,EAAe,CAACzE,WAAS0M,UAAU,yBAA1D,8FCSLc,gBAjBS,SAAC1I,GACrB,MAAO,CACH9E,MAAO8E,EAAM6G,KAAK3L,MAClBR,MAAOsF,EAAM6G,KAAKnM,MAClB2B,SAAU2D,EAAM6G,KAAKxK,SACrBC,OAAQ0D,EAAM6G,KAAKvK,WAIA,SAACiB,GACxB,OAAOoL,YAAmB,CACtBrJ,gBACAM,sBACAD,kBACDpC,KAGQmL,EAnCW,SAAC,GAA4F,IAA1FxN,EAAyF,EAAzFA,MAAOR,EAAkF,EAAlFA,MAAO2B,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,OAAQgD,EAAyD,EAAzDA,cAAeM,EAA0C,EAA1CA,oBAAqBD,EAAqB,EAArBA,eAM7F,OACI,kBAAC,GAAD,CACIzE,MAAOA,EACPR,MAAOA,EACP2B,SAAUA,EACV0T,cATc,SAACzS,GACnBgC,EAAchC,EAAEuL,OAAO1J,KAAM7B,EAAEuL,OAAOzJ,QASlCQ,oBAAqBA,EACrBD,eAAgBA,EAChBrD,OAAQA,OCXL0T,GALM,WAEjB,OAAO,kBAAC,GAAD,OCiCIC,GA/BM,SAACvR,GAClB,OAAGA,EAEK,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOwR,KAAK,QAAQC,OAAK,GACrB,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOD,KAAK,QAAQC,OAAK,GACrB,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOD,KAAK,YAAYC,OAAK,GACzB,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOD,KAAK,WAAWC,OAAK,GACxB,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAUC,GAAG,WAKjB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOF,KAAK,QAAQC,OAAK,GACrB,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAUC,GAAG,YC0Cd1H,I,OAAAA,YAAQ,MANI,SAACnL,GACxB,OAAOoL,YAAmB,CACtB3J,aACDzB,KAGQmL,EAnEA,SAAC,GAAmB,IAAjB1J,EAAgB,EAAhBA,UAAgB,EAEMqN,oBAAS,GAFf,oBAEvBgE,EAFuB,KAEXC,EAFW,KAGxBxQ,EAAUlC,IAYhB,OACI,yBAAKgK,UAAU,+CACX,0BAAMA,UAAU,gBAAhB,SACA,4BACIA,UAAU,iBACV7I,KAAK,SACLwJ,QAhBO,WACf+H,GAAeD,KAgBP,0BAAMzI,UAAU,yBAEpB,yBACIA,UAAS,mCAA8ByI,GAAc,UACrDpU,GAAG,sBACH,yBAAK2L,UAAU,sBACX,kBAAC,IAAD,CACIA,UAAU,oBACVwI,GAAG,YAFP,8CAKA,kBAAC,IAAD,CACIxI,UAAU,oBACVwI,GAAG,SAFP,sBAKA,kBAAC,IAAD,CACIxI,UAAU,oBACVwI,GAAG,SAFP,8CAKA,kBAAC,IAAD,CACIxI,UAAU,oBACVwI,GAAG,aAFP,0DAKA,uBACIxI,UAAU,oBACV2I,KAAK,IACLhI,QA1CE,SAACjL,GACnBA,EAAEkT,iBACF1Q,EAAQxB,aACRU,EAAU,MAoCE,yCCzBL0J,gBANS,SAAC1I,GACrB,MAAO,CACHtB,OAAQsB,EAAM6G,KAAKnI,UAIa,KAAzBgK,EAtBH,SAAC,GAAc,IAAbhK,EAAY,EAAZA,OAEJ+R,EAASR,GAAavR,GACtBgS,EAAMhS,EAAS,kBAAC,GAAD,MAAa,KAElC,OACI,yBAAKkJ,UAAU,sCACV8I,EACD,yBAAK9I,UAAU,aACV6I,GAEL,kBAAC,IAAD,UCbZE,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUtJ,MAAOA,IACb,kBAAC,GAAD,QAGVuJ,SAASC,eAAe,W","file":"static/js/main.1546a928.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst authApi = () => {\r\n\r\n    const url = '/api/auth';\r\n\r\n    const login = async (email, password) => {\r\n        return await axios.post(`${url}/login`, {email, password});\r\n    };\r\n\r\n    const register = async (email, password) => {\r\n        return await axios.post(`${url}/register`, {email, password});\r\n    };\r\n\r\n    const check = async (token) => {\r\n        return await axios.post(`${url}/check`, {token});\r\n    };\r\n\r\n    return {\r\n        login,\r\n        register,\r\n        check\r\n    }\r\n};\r\n\r\nexport default authApi;","import axios from 'axios';\r\n\r\nconst notesApi = token => {\r\n\r\n    const url = '/api/note';\r\n\r\n    const template = axios.create({\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    const getNotes = async () => {\r\n        return await template.get(`${url}`);\r\n    };\r\n\r\n    const addNote = async (text) => {\r\n        return await template.post(`${url}/add`, {text});\r\n    };\r\n\r\n    const updateNote = async (noteId, important, done) => {\r\n        return await template.patch(`${url}/update`, {\r\n            id: noteId,\r\n            important,\r\n            done\r\n        });\r\n    };\r\n\r\n    const deleteNote = async (noteId) => {\r\n        return await template.post(`${url}/delete`, {id: noteId});\r\n    }\r\n\r\n    return {\r\n        getNotes,\r\n        addNote,\r\n        updateNote,\r\n        deleteNote\r\n    }\r\n};\r\n\r\nexport default notesApi;","import axios from 'axios';\r\n\r\nconst settingsApi = token => {\r\n\r\n    const url = '/api/settings';\r\n\r\n    const template = axios.create({\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    const setSettings = async (nickname, avatar) => {\r\n        return await template.patch(url, { nickname, avatar });\r\n    };\r\n\r\n    const deleteAcc = async () => {\r\n        return await template.delete(url);\r\n    };\r\n\r\n    return {\r\n        setSettings,\r\n        deleteAcc\r\n    }\r\n};\r\n\r\nexport default settingsApi;","import axios from 'axios';\r\n\r\nconst dialogsApi = (token) => {\r\n\r\n    const url = '/api/dialogs';\r\n\r\n    const template = axios.create({\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    const getDialogs = async () => {\r\n        return await template.get(`${url}`);\r\n    };\r\n\r\n    const createDialog = async (partnerId, text) => {\r\n        return await template.post(`${url}`, {partnerId, text});\r\n    };\r\n\r\n    return {\r\n        getDialogs,\r\n        createDialog\r\n    }\r\n};\r\n\r\nexport default dialogsApi;","import axios from 'axios';\r\n\r\nconst messagesApi = (token) => {\r\n\r\n    const url = '/api/messages';\r\n\r\n    const template = axios.create({\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    const getMessages = async dialogId => {\r\n        return await template.get(`${url}/${dialogId}`);\r\n    };\r\n\r\n    const sendMessage = async (dialogId, text) => {\r\n        return await template.post(`${url}`, {dialogId, text});\r\n    };\r\n\r\n    return {\r\n        getMessages,\r\n        sendMessage\r\n    }\r\n};\r\n\r\nexport default messagesApi;","import axios from 'axios';\r\n\r\nconst usersApi = (token) => {\r\n\r\n    const url = '/api/find';\r\n\r\n    const template = axios.create({\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    const findUsers = async (reqEmail) => {\r\n        return await template.post(`${url}`, {reqEmail});\r\n    };\r\n\r\n    return {\r\n        findUsers\r\n    }\r\n};\r\n\r\nexport default usersApi;","import { toast } from \"react-toastify\";\r\n\r\nexport const requestError = (action, e, dispatch) => {\r\n    dispatch(action);\r\n    toast(e.response.data.message);\r\n};","export const useLocaleStorage = () => {\r\n    const saveUser = (user) => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n\r\n    const getUser = () => {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    };\r\n\r\n    const deleteUser = () => {\r\n        localStorage.removeItem('user');\r\n    };\r\n\r\n    return {\r\n        saveUser,\r\n        getUser,\r\n        deleteUser\r\n    }\r\n\r\n};","import { toast } from \"react-toastify\";\r\n\r\nimport { authApi, settingsApi } from \"api\";\r\nimport { requestError } from 'utils/requestError';\r\nimport { useLocaleStorage } from \"hooks/useLocalStorage\";\r\n\r\nconst FETCHING = 'FETCHING';\r\nconst SET_AUTH = 'SET_AUTH';\r\nconst SET_FIELD_AUTH_FORM = 'SET_FIELD_AUTH_FORM';\r\nconst CLEAR_AUTH_FORM = 'CLEAR_AUTH_FORM';\r\nconst SET_SETTINGS = 'SET_SETTINGS';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    token: null,\r\n    email: null,\r\n    nickname: null,\r\n    avatar: null,\r\n    isAuth: false,\r\n    fetching: false,\r\n    form: {\r\n        email: '',\r\n        pass: ''\r\n    }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCHING:\r\n            return {\r\n                ...state,\r\n                fetching: action.fetching\r\n            }\r\n        case SET_AUTH: \r\n            return {\r\n                ...state,\r\n                userId: action.userId,\r\n                token: action.token,\r\n                email: action.email,\r\n                nickname: action.nickname,\r\n                avatar: action.avatar,\r\n                isAuth: action.token ? true : false\r\n            }\r\n        case SET_FIELD_AUTH_FORM: {\r\n            return {\r\n                ...state,\r\n                form: {\r\n                    ...state.form,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        }\r\n        case CLEAR_AUTH_FORM: {\r\n            return {\r\n                ...state,\r\n                form: {\r\n                    email: '',\r\n                    pass: ''\r\n                }\r\n            }\r\n        }\r\n        case SET_SETTINGS: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const fetchingAC = (fetching) => {\r\n    return {\r\n        type: FETCHING,\r\n        fetching\r\n    }\r\n}\r\n\r\nexport const setAuthAC = (obj) => {\r\n    const {userId = null, nickname = null, avatar = null, email = null, token = null} = obj;\r\n    return {\r\n        type: SET_AUTH,\r\n        userId,\r\n        token,\r\n        nickname,\r\n        avatar,\r\n        email\r\n    }\r\n};\r\n\r\nexport const setAuthFormAC = (name, value) => {\r\n    return {\r\n        type: SET_FIELD_AUTH_FORM,\r\n        payload: {\r\n            [name]: value\r\n        }\r\n    }\r\n};\r\n\r\nexport const clearAuthFormAC = () => {\r\n    return {\r\n        type: CLEAR_AUTH_FORM\r\n    };\r\n};\r\n\r\nexport const setSettingsAC = (name, value) => {\r\n    return {\r\n        type: SET_SETTINGS,\r\n        payload: {\r\n            [name]: value\r\n        }\r\n    }\r\n};\r\n\r\nexport const requestLoginThunk = (email, pass) => {\r\n    return async (dispatch) => {\r\n        try{\r\n            dispatch(fetchingAC(true));\r\n            const api = authApi();\r\n            const data = await api.login(email, pass);\r\n            if(data.statusText === 'OK') {\r\n                const {userId, email, nickname, avatar, token, message} = data.data;\r\n                const storage = useLocaleStorage();\r\n                storage.saveUser(data.data);\r\n                dispatch(setAuthAC({userId, nickname, avatar, email, token}));\r\n                dispatch(fetchingAC(false));\r\n                dispatch(clearAuthFormAC());\r\n                toast(message);\r\n            }\r\n        } catch(e) {\r\n            requestError(fetchingAC(false), e, dispatch);\r\n        }\r\n    }\r\n};\r\n\r\nexport const requestRegisterThunk = (email, pass) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchingAC(true));\r\n            const api = authApi();\r\n            const data = await api.register(email, pass)\r\n            if(data.statusText === 'Created') {\r\n                toast(data.data.message);\r\n                dispatch(fetchingAC(false));\r\n            }\r\n        } catch(e) {\r\n            requestError(fetchingAC(false), e, dispatch);\r\n        }\r\n    }\r\n};\r\n\r\nexport const deleteAccThunk = ({token}) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(fetchingAC(true));\r\n            const api = settingsApi(token);\r\n            const data = await api.deleteAcc();\r\n            if(data.statusText === 'Accepted') {\r\n                const {message} = data.data;\r\n                toast(message);\r\n                dispatch(fetchingAC(false));\r\n                dispatch(setAuthAC({}));\r\n                dispatch(setAuthFormAC('email', ''));\r\n                dispatch(setAuthFormAC('pass', ''));\r\n                const storage = useLocaleStorage();\r\n                storage.deleteUser();\r\n            }\r\n        } catch(e) {\r\n            requestError(fetchingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nexport const updateSettingsThunk = ({token, nickname, avatar}) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(fetchingAC(true));\r\n            const api = settingsApi(token);\r\n            const data = await api.setSettings(nickname, avatar);\r\n            if(data.statusText === 'Accepted') {\r\n                const {message} = data.data;\r\n                dispatch(fetchingAC(false));\r\n                toast(message);\r\n            }\r\n        } catch(e) {\r\n            requestError(fetchingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nexport const cheackAuthThunk = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const storage = useLocaleStorage();\r\n            const user = storage.getUser();\r\n            if(user && user.token) {\r\n                const api = authApi();\r\n                const data = await api.check(user.token);\r\n                if(data.statusText === 'Accepted') {\r\n                    dispatch(setAuthAC(user));\r\n                } else {\r\n                    storage.deleteUser();\r\n                }\r\n            } else {\r\n                dispatch(setAuthAC({}));\r\n            }\r\n        } catch(e) {\r\n            requestError(fetchingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nexport default reducer;","import { toast } from \"react-toastify\";\r\n\r\nimport { requestError } from 'utils/requestError';\r\nimport { notesApi } from \"api\";\r\n\r\nconst FETCHING = 'FETCHING';\r\nconst SENDING = 'SENDING';\r\nconst SET_NOTES = 'SET_NOTES';\r\nconst SET_NEW_NOTE = 'SET_NEW_NOTE';\r\nconst UPDATE_NOTE = 'UPDATE_NOTE';\r\nconst SET_SEARCH = 'SET_SEARCH';\r\nconst SET_FILTER = 'SET_FILTER';\r\n\r\nconst initialState = {\r\n    fetching: false,\r\n    sending: false,\r\n    notes: [],\r\n    newNote: '',\r\n    search: '',\r\n    activeFilter: 'all'\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCHING: \r\n            return {\r\n                ...state,\r\n                fetching: action.fetching\r\n            }\r\n        case SET_NOTES: \r\n            return {\r\n                ...state,\r\n                notes: action.notes\r\n            }\r\n        case SENDING: \r\n            return {\r\n                ...state,\r\n                sending: action.sending\r\n            }\r\n        case SET_NEW_NOTE:\r\n            return {\r\n                ...state,\r\n                newNote: action.newNote\r\n            }\r\n        case UPDATE_NOTE:\r\n            return updateNote(state, action.note, action.noteId);\r\n        case SET_SEARCH: \r\n            return {\r\n                ...state,\r\n                search: action.search\r\n            }\r\n        case SET_FILTER: \r\n            return {\r\n                ...state,\r\n                activeFilter: action.newFilter\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const fetchingAC = (fetching) => {\r\n    return {\r\n        type: FETCHING,\r\n        fetching\r\n    }\r\n};\r\n\r\nexport const sendingAC = (sending) => {\r\n    return {\r\n        type: SENDING,\r\n        sending\r\n    }\r\n}\r\n\r\nexport const setNotesAC = (notes) => {\r\n    return {\r\n        type: SET_NOTES,\r\n        notes\r\n    }\r\n};\r\n\r\nexport const setNewNoteAC = (newNote) => {\r\n    return {\r\n        type: SET_NEW_NOTE,\r\n        newNote\r\n    }\r\n};\r\n\r\nexport const updateNoteAC = (note, noteId) => {\r\n    return {\r\n        type: UPDATE_NOTE,\r\n        note,\r\n        noteId\r\n    }\r\n};\r\n\r\nexport const setSearchAC = (search) => {\r\n    return {\r\n        type: SET_SEARCH,\r\n        search\r\n    }\r\n};\r\n\r\nexport const setFilterAC = (newFilter) => {\r\n    return {\r\n        type: SET_FILTER,\r\n        newFilter\r\n    }\r\n}\r\n\r\nexport const requestNotesThunk = (token) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(fetchingAC(true));\r\n            const api = notesApi(token);\r\n            const data = await api.getNotes();\r\n            if(data.statusText === 'OK') {\r\n                dispatch(fetchingAC(false));\r\n                dispatch(setNotesAC(data.data.notes));\r\n                toast(data.data.message);\r\n            } else {\r\n                toast('–û—à–∏–±–∫–∞!');\r\n            }\r\n        } catch(e) {\r\n            requestError(fetchingAC(false), e, dispatch);\r\n        }\r\n    }\r\n};\r\n\r\nexport const requestAddNoteThunk = (token, text) => {\r\n    return async (dispatch) => {\r\n        try{\r\n            dispatch(sendingAC(true));\r\n            const api = notesApi(token);\r\n            const data = await api.addNote(text);\r\n            if(data.statusText === 'Created') {\r\n                dispatch(requestNotesThunk(token));\r\n                dispatch(setNewNoteAC(''));\r\n                dispatch(sendingAC(false));\r\n                toast(data.data.message);\r\n            } else {\r\n                toast('–û—à–∏–±–∫–∞!');\r\n            }\r\n        } catch(e) {\r\n            requestError(sendingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nexport const requestUpdateNoteThunk = (token, noteId, important, done) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(sendingAC(true));\r\n            const api = notesApi(token);\r\n            const data = await api.updateNote(noteId, important, done);\r\n            if(data.statusText === 'Accepted') {\r\n                dispatch(updateNoteAC(data.data.note, noteId));\r\n                dispatch(sendingAC(false));\r\n                toast(data.data.message);\r\n            } else {\r\n                toast('–û—à–∏–±–∫–∞!');\r\n            }\r\n        } catch(e) {\r\n            requestError(sendingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nexport const requestDeleteNoteThunk = (token, noteId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(sendingAC(true));\r\n            const api = notesApi(token);\r\n            const data = await api.deleteNote(noteId);\r\n            console.log(data);\r\n            if(data.statusText === 'Accepted') {\r\n                dispatch(updateNoteAC(null, noteId));\r\n                dispatch(sendingAC(false));\r\n                toast(data.data.message);\r\n            } else {\r\n                toast('–û—à–∏–±–∫–∞!');\r\n            }\r\n        } catch(e) {\r\n            requestError(sendingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nconst updateNote = (state, note, noteId) => {\r\n    const idx = state.notes.findIndex((el) => el._id === noteId);\r\n    if(idx !== -1) {\r\n        if(note !== null) {\r\n            return {\r\n                ...state,\r\n                notes: [\r\n                    ...state.notes.slice(0, idx),\r\n                    note,\r\n                    ...state.notes.slice(idx + 1)\r\n                ]\r\n            }\r\n        }\r\n        return {\r\n            ...state,\r\n            notes: [\r\n                ...state.notes.slice(0, idx),\r\n                ...state.notes.slice(idx + 1)\r\n            ]\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;","const SET_MESSAGE = 'SET_MESSAGE';\r\nconst PUSH_MESSAGE = 'PUSH_MESSAGE';\r\nconst CLEAR_MESSAGES = 'CLEAR_MESSAGES';\r\nconst SET_OPEN_ONLINE_USERS = 'SET_OPEN_ONLINE_USERS';\r\nconst SET_ONLINE_USERS = 'SET_ONLINE_USERS';\r\nconst DELETE_USER = 'DELETE_USER';\r\n\r\nconst initialState = {\r\n    openOnlineUsers: false,\r\n    messageField: '',\r\n    onlineUsers: [],\r\n    messages: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_MESSAGE: \r\n            return {\r\n                ...state,\r\n                messageField: action.messageField\r\n            }\r\n        case PUSH_MESSAGE: \r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    action.message\r\n                ]\r\n            }\r\n        case CLEAR_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: []\r\n            }\r\n        case SET_OPEN_ONLINE_USERS:\r\n            return {\r\n                ...state,\r\n                openOnlineUsers: !state.openOnlineUsers\r\n            }\r\n        case SET_ONLINE_USERS:\r\n            return {\r\n                ...state,\r\n                onlineUsers: action.onlineUsers\r\n            }\r\n        case DELETE_USER: {\r\n            const idx = state.onlineUsers.findIndex(el => el._id === action.id);\r\n            if(idx !== -1) {\r\n                return {\r\n                    ...state,\r\n                    onlineUsers: [\r\n                        ...state.onlineUsers.slice(0, idx),\r\n                        ...state.onlineUsers.slice(idx + 1)\r\n                    ]\r\n                } \r\n            }\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setMessageAC = messageField => {\r\n    return {\r\n        type: SET_MESSAGE,\r\n        messageField\r\n    };\r\n};\r\n\r\nexport const pushMessageAC = message => {\r\n    const date = new Date();\r\n    message.date = `${date.getHours()}:${date.getMinutes()}`;\r\n    return {\r\n        type: PUSH_MESSAGE,\r\n        message\r\n    };\r\n};\r\n\r\nexport const clearMessagesAC = () => {\r\n    return {\r\n        type: CLEAR_MESSAGES\r\n    };\r\n};\r\n\r\nexport const setOpenOnlineUsersAC = () => {\r\n    return {\r\n        type: SET_OPEN_ONLINE_USERS\r\n    };\r\n};\r\n\r\nexport const setOnlineUsersAC = (onlineUsers) => {\r\n    return {\r\n        type: SET_ONLINE_USERS,\r\n        onlineUsers\r\n    };\r\n};\r\n\r\nexport const deleteUserAC = id => {\r\n    return {\r\n        type: DELETE_USER,\r\n        id\r\n    }\r\n};\r\n\r\nexport default reducer;","export const formatDate = ({ dateFromBase, type }) => {\r\n    \r\n    const date = new Date();\r\n    const dt = new Date(dateFromBase);\r\n\r\n    const dayMonthDate = ((date.getDate()) + '').padStart(2, \"0\");\r\n    const dayMonthDt = ((dt.getDate()) + '').padStart(2, \"0\");\r\n\r\n    const monthDate = ((date.getMonth() + 1) + '').padStart(2, \"0\");\r\n    const monthDt = ((dt.getMonth() + 1) + '').padStart(2, \"0\");\r\n\r\n    const yearDate = date.getFullYear();\r\n    const yearDt = dt.getFullYear();\r\n\r\n    const hours = (dt.getHours() + '').padStart(2, \"0\");\r\n    const minutes = (dt.getMinutes() + '').padStart(2, '0');\r\n\r\n    const returnDate = () => {\r\n        switch(type) {\r\n            case 'dialogs': \r\n                return `${dayMonthDt}.${monthDt}.${yearDt}`;\r\n            case 'messages':\r\n                return `${dayMonthDt}.${monthDt}.${yearDt} - ${hours}:${minutes}`;\r\n            default:\r\n                return `${dayMonthDt}.${monthDt}.${yearDt} - ${hours}:${minutes}`;\r\n                \r\n        }\r\n    };\r\n\r\n    if(dayMonthDate !== dayMonthDt) { //–µ—Å–ª–∏ –¥–Ω–∏ –º–µ—Å—è—Ü–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç\r\n        if((dayMonthDate - dayMonthDt) === 1) { // –µ—Å–ª–∏ —É–∂–µ –Ω–∞—Å—Ç—É–ø–∏–ª —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å\r\n            if(monthDate === monthDt && yearDate === yearDt) { //–µ—Å–ª–∏ –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞ —Å–æ–≤–ø–∞–¥–∞—é—Ç\r\n                if(type === 'dialogs') { //–µ—Å–ª–∏ –¥–∏–∞–ª–æ–≥\r\n                    return '–í—á–µ—Ä–∞'; //—Ç–æ –≤–µ—Ä–Ω–∏ \"–í—á–µ—Ä–∞\"\r\n                } else return `–í—á–µ—Ä–∞ - ${hours}:${minutes}`; //–∏–Ω–∞—á–µ –≤–µ—Ä–Ω–∏ \"–≤—á–µ—Ä–∞\" –∏ –≤—Ä–µ–º—è\r\n            } else return returnDate(); //–∏–ª–∏ –µ—Å–ª–∏ –º–µ—Å—è—Ü –∏–ª–∏ –≥–æ–¥ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, —Ç–æ –≤–µ—Ä–Ω–∏ –ø—Ä–æ—Å—Ç–æ –¥–∞—Ç—É\r\n        } else return returnDate();  //–∏–ª–∏ –µ—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏–ª —É–∂–µ –±–æ–ª—å—à–µ, —á–µ–º –æ–¥–∏–Ω –¥–µ–Ω—å\r\n    } else { //–Ω–æ –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –¥–µ–Ω—å\r\n        if(monthDate !== monthDt || yearDate !== yearDt) { //–µ—Å–ª–∏ –∏–ª–∏ –º–µ—Å—è—Ü, –∏–ª–∏ –≥–æ–¥ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç\r\n            return returnDate();  //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—É\r\n        } else { //–µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ\r\n            return `${hours}:${minutes}`;\r\n        }\r\n    }\r\n\r\n};","import { formatDate } from './formatDate';\r\n\r\nexport const _transformDialogs = ({dialogs, userId}) => {\r\n    \r\n    const mapDialogs = dialogs.map(dialog => {\r\n        return _transformDialog(dialog, userId);\r\n    });\r\n\r\n    return mapDialogs.sort((a, b) => {\r\n        return new Date(b.fullDate) - new Date(a.fullDate)\r\n    });\r\n};\r\n\r\nexport const _transformDialog = (dialog, userId) => {\r\n    let partner;\r\n\r\n    if(dialog.partner._id === userId) {\r\n        partner = dialog.author;\r\n    } else {\r\n        partner = dialog.partner;\r\n    }\r\n\r\n    const isOnline = (new Date() - new Date(partner.lastSeen)) < (5 * 60 * 1000); \r\n\r\n    return {\r\n        id: dialog._id,\r\n        avatar: partner.avatar,\r\n        email: partner.email,\r\n        text: dialog.lastMessage.text,\r\n        fullDate: dialog.lastMessage.createdAt,\r\n        date: formatDate({dateFromBase: dialog.lastMessage.createdAt, type: 'dialogs'}),\r\n        my: dialog.lastMessage.author === userId,\r\n        unreadMessages: dialog.unreadMessages,\r\n        isOnline,\r\n        participants: {\r\n            author: dialog.author,\r\n            partner: dialog.partner\r\n        }\r\n    }\r\n};\r\n\r\nexport const _transformMessages = ({messages, participants}) => {\r\n    return messages.map(message => {\r\n\r\n        return _transformMessage(message, participants);\r\n\r\n    });\r\n};\r\n\r\nexport const _transformMessage = (message, participants) => {\r\n    let ownerMessage;\r\n\r\n    if(participants.author._id === message.author) {\r\n        ownerMessage = participants.author;\r\n    } else ownerMessage = participants.partner;\r\n\r\n    return {\r\n        senderId: ownerMessage._id,\r\n        avatar: ownerMessage.avatar,\r\n        author: ownerMessage.nickname || ownerMessage.email,\r\n        text: message.text,\r\n        fullDate: message.createdAt,\r\n        date: formatDate({dateFromBase: message.createdAt, type: 'messages'})\r\n    }\r\n};\r\n\r\nexport const _transformFoundUsers = ({foundUsers}) => {\r\n    return foundUsers.map(item => {\r\n        return {\r\n            partnerId: item._id,\r\n            avatar: item.avatar,\r\n            email: item.email\r\n        }\r\n    });\r\n};","import { dialogsApi, messagesApi, usersApi } from \"api\";\r\nimport { _transformDialogs, _transformMessages, _transformFoundUsers } from 'utils/transformData';\r\nimport { formatDate } from \"utils/formatDate\";\r\nimport { requestError } from 'utils/requestError';\r\n\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst SET_VIEW_SEARCH_WINDOW = 'SET_VIEW_SEARCH_WINDOW';\r\nconst SET_SEARCH_FIELD = 'SET_SEARCH_FIELD';\r\nconst SET_SELECTED_NEW_ID = 'SET_CHECKED_NEW_ID';\r\nconst SET_FIRST_MESSAGE = 'SET_FIRST_MESSAGE';\r\nconst SET_SELECTED_DIALOG = 'SET_SELECTED_DIALOG';\r\nconst SET_DIALOGS = 'SET_DIALOGS';\r\nconst UPDATE_DIALOG = 'UPDATE_DIALOG';\r\nconst SET_FOUND_USERS = 'SET_FOUND_USERS';\r\nconst SET_MESSAGES = 'SET_MESSAGES';\r\nconst PUSH_TO_MESSAGES = 'PUSH_TO_MESSAGES';\r\nconst UPDATE_READSTATUS = 'UPDATE_READSTATUS';\r\nconst SET_IS_TYPING = 'SET_IS_TYPING';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    viewSearchWindow: false,\r\n    searchField: '',\r\n    selectedNewId: null,\r\n    firstMessage: '',\r\n    selectedDialog: null,\r\n    dialogs: [],\r\n    foundUsers: [],\r\n    messages: [],\r\n    isTyping: {\r\n        status: false,\r\n        writersName: ''\r\n    }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_LOADING: \r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        case SET_VIEW_SEARCH_WINDOW:\r\n            return {\r\n                ...state,\r\n                viewSearchWindow: action.viewSearchWindow\r\n            }\r\n        case SET_SEARCH_FIELD: \r\n            return {\r\n                ...state,\r\n                searchField: action.searchField\r\n            }\r\n        case SET_SELECTED_NEW_ID: \r\n            return {\r\n                ...state,\r\n                selectedNewId: action.selectedNewId\r\n            }\r\n        case SET_FIRST_MESSAGE: \r\n            return {\r\n                ...state,\r\n                firstMessage: action.firstMessage\r\n            }\r\n        case SET_SELECTED_DIALOG:\r\n            return {\r\n                ...state,\r\n                selectedDialog: action.selectedDialog\r\n            }\r\n        case SET_DIALOGS:\r\n            return {\r\n                ...state,\r\n                dialogs: action.dialogs\r\n            }\r\n        case UPDATE_DIALOG: {\r\n            const idx = state.dialogs.findIndex(item => item.id === action.dialog.id);\r\n            const dialog = {\r\n                ...state.dialogs[idx],\r\n                ...action.dialog,\r\n                unreadMessages: state.dialogs[idx].unreadMessages + 1 \r\n            };\r\n\r\n            if(idx !== -1) {\r\n                return {\r\n                    ...state,\r\n                    dialogs: [\r\n                        dialog,\r\n                        ...state.dialogs.slice(0, idx),\r\n                        ...state.dialogs.slice(idx + 1)\r\n                    ]\r\n                }\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case SET_FOUND_USERS:\r\n            return {\r\n                ...state,\r\n                foundUsers: action.foundUsers\r\n            }\r\n        case SET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: action.messages\r\n            }\r\n        case PUSH_TO_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    action.message\r\n                ]\r\n            }\r\n        case UPDATE_READSTATUS: {\r\n            const idx = state.dialogs.findIndex(item => item.id === action.payload);\r\n            const dialogs = [...state.dialogs];\r\n\r\n            if(idx !== -1) {\r\n                dialogs[idx].unreadMessages = 0;\r\n                return {\r\n                    ...state,\r\n                    dialogs\r\n                }\r\n            }\r\n            return state;\r\n        }\r\n        case SET_IS_TYPING: \r\n            return {\r\n                ...state,\r\n                isTyping: {\r\n                    status: action.isTyping.status,\r\n                    writersName: action.isTyping.writersName\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setLoadingAC = payload => {\r\n    return {\r\n        type: SET_LOADING,\r\n        loading: payload\r\n    }\r\n};\r\n\r\nexport const setViewSearchWindowAC = payload => {\r\n    return {\r\n        type: SET_VIEW_SEARCH_WINDOW,\r\n        viewSearchWindow: payload\r\n    }\r\n};\r\n\r\nexport const setSearchFieldAC = payload => {\r\n    return {\r\n        type: SET_SEARCH_FIELD,\r\n        searchField: payload\r\n    }\r\n};\r\n\r\nexport const setSelectedNewIdAC = payload => {\r\n    return {\r\n        type: SET_SELECTED_NEW_ID,\r\n        selectedNewId: payload\r\n    }\r\n};\r\n\r\nexport const setFirstMessageAC = payload => {\r\n    return {\r\n        type: SET_FIRST_MESSAGE,\r\n        firstMessage: payload\r\n    }\r\n};\r\n\r\nexport const setSelectedDialogAC = payload => {\r\n    return {\r\n        type: SET_SELECTED_DIALOG,\r\n        selectedDialog: payload\r\n    }\r\n};\r\n\r\nexport const setDialogsAC = payload => {\r\n    return {\r\n        type: SET_DIALOGS,\r\n        dialogs: payload\r\n    }\r\n};\r\n\r\nexport const updateDialogAC = payload => {\r\n    return {\r\n        type: UPDATE_DIALOG,\r\n        dialog: payload\r\n    }\r\n};\r\n\r\nexport const setFoundUsersAC = payload => {\r\n    return {\r\n        type: SET_FOUND_USERS,\r\n        foundUsers: payload\r\n    }\r\n}\r\n\r\nexport const setMessagesAC = payload => {\r\n    return {\r\n        type: SET_MESSAGES,\r\n        messages: payload\r\n    }\r\n};\r\n\r\nexport const pushToMessagesAC = payload => {\r\n    return {\r\n        type: PUSH_TO_MESSAGES,\r\n        message: payload\r\n    }\r\n};\r\n\r\nexport const updateReadstatusAC = payload => {\r\n    return {\r\n        type: UPDATE_READSTATUS,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setIsTypingAC = payload => {\r\n    return {\r\n        type: SET_IS_TYPING,\r\n        isTyping: payload\r\n    }\r\n}\r\n\r\nexport const createDialogThunk = (token, userId, partnerId, text) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoadingAC(true));\r\n            const api = dialogsApi(token);\r\n            await api.createDialog(partnerId, text);\r\n            dispatch(setLoadingAC(false));\r\n            dispatch(setViewSearchWindowAC(false));\r\n            dispatch(setSelectedNewIdAC(''));\r\n            dispatch(setSearchFieldAC(''));\r\n            dispatch(setFirstMessageAC(''));\r\n            dispatch(setFoundUsersAC([]));\r\n        } catch(e) {\r\n            requestError(setLoadingAC(false), e, dispatch);\r\n        }\r\n    };\r\n}\r\n\r\nexport const getDialogsThunk = (token, userId) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoadingAC(true));\r\n            const api = dialogsApi(token);\r\n            const data = await api.getDialogs();\r\n            const transformDialogs = _transformDialogs({dialogs: data.data.dialogs, userId});\r\n            dispatch(setDialogsAC(transformDialogs));\r\n            dispatch(setLoadingAC(false));\r\n        } catch(e) {\r\n            requestError(setLoadingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nexport const getMessagesFromDialogThunk = (token, dialogId, participants) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoadingAC(true));\r\n            dispatch(setMessagesAC([]));\r\n            const api = messagesApi(token);\r\n            const data = await api.getMessages(dialogId);\r\n            const transformMessages = _transformMessages({\r\n                messages: data.data.messages,\r\n                participants\r\n            });\r\n            dispatch(setMessagesAC(transformMessages));\r\n            dispatch(setLoadingAC(false));\r\n        } catch(e) {\r\n            requestError(setLoadingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nexport const sendMessageThunk = (token, dialogId, text, socket) => {\r\n    return async dispatch => {\r\n        try {\r\n            const api = messagesApi(token);\r\n            await api.sendMessage(dialogId, text);\r\n        } catch(e) {\r\n            requestError(setLoadingAC(false), e, dispatch);\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateDialogThunk = (newDialog, userId) => {\r\n    return dispatch => {\r\n        try {\r\n            const { dialogId, text, date, partnerId } = newDialog;\r\n            const result = {\r\n                id: dialogId,\r\n                text: text,\r\n                fulldate: date,\r\n                my: userId !== partnerId,\r\n                date: formatDate({dateFromBase: date, type: 'dialogs'})\r\n            };\r\n            if(userId !== partnerId) {\r\n                result.unreadMessages = 1;\r\n            }\r\n            dispatch(updateDialogAC(result));\r\n        } catch(e) {\r\n            requestError(setLoadingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nexport const pushToMessagesThunk = (message) => {\r\n    return dispatch => {\r\n        try {\r\n            const { date } = message;\r\n            const newMessage = {\r\n                ...message,\r\n                fullDate: date,\r\n                date: formatDate({dateFromBase: date, type: 'messages'})\r\n            };\r\n            dispatch(pushToMessagesAC(newMessage));\r\n        } catch(e) {\r\n            requestError(setLoadingAC(false), e, dispatch);\r\n        }\r\n    };\r\n}\r\n\r\nexport const findUsersThunk = (token, reqEmail) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setFoundUsersAC([]));\r\n            dispatch(setLoadingAC(true));\r\n            const api = usersApi(token);\r\n            const data = await api.findUsers(reqEmail.toLowerCase());\r\n            const transformFoundUsers = _transformFoundUsers({\r\n                foundUsers: data.data.foundUsers\r\n            });\r\n            dispatch(setFoundUsersAC(transformFoundUsers));\r\n            dispatch(setLoadingAC(false));\r\n        } catch(e) {\r\n            requestError(setLoadingAC(false), e, dispatch);\r\n        }\r\n    };\r\n};\r\n\r\nexport default reducer;","import ReduxThunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\n\r\nimport authReducer from './authReducer';\r\nimport notesReducer from './notesReducer';\r\nimport chatReducer from './chatReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    todoPage: notesReducer,\r\n    chatPage: chatReducer,\r\n    form: formReducer,\r\n    dialogsPage: dialogsReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(ReduxThunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\n\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-css\">\r\n            <div className=\"lds-double-ring\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamation, faCheckSquare, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ItemList = ({ text, handleClick, sending, important, done }) => {\r\n\r\n    const buttons = [\r\n        { id: 1, name: \"important\", classNames: \"btn btn-primary\", onClickFunction: handleClick, fontAwesomeIcon: faExclamation },\r\n        { id: 2, name: \"done\", classNames: \"btn btn-success btn-done\", onClickFunction: handleClick, fontAwesomeIcon: faCheckSquare },\r\n        { id: 3, name: \"delete\", classNames: \"btn btn-danger\", onClickFunction: handleClick, fontAwesomeIcon: faTrash }\r\n    ];\r\n\r\n    const renderButtons = buttons.map((item) => {\r\n        return(\r\n            <button\r\n                name={item.name}\r\n                type=\"button\"\r\n                className={item.classNames}\r\n                key={item.id} \r\n                onClick={item.onClickFunction}\r\n                disabled={sending} >\r\n                <FontAwesomeIcon icon={item.fontAwesomeIcon} />\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <li\r\n            className={`list-group-item list-group-item--custom ${important && 'important'} ${done && 'doneItem'}`} >\r\n            {text}\r\n            <div className=\"float-right buttons-wrap\">\r\n                {renderButtons}\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './ItemList.css';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { requestUpdateNoteThunk, requestDeleteNoteThunk } from '../../../redux/notesReducer';\r\nimport ItemList from './ItemList';\r\n\r\nconst ItemListContainer = ({ text, itemId, requestUpdateNoteThunk, requestDeleteNoteThunk, token, important, done, sending }) => {\r\n\r\n    const handleClick = (e) => {\r\n        switch(e.target.name) {\r\n            case 'important':\r\n                return requestUpdateNoteThunk(token, itemId, !important, done);\r\n            case 'done':\r\n                return requestUpdateNoteThunk(token, itemId, important, !done);\r\n            case 'delete':\r\n                return requestDeleteNoteThunk(token, itemId);\r\n            default: \r\n                return requestUpdateNoteThunk(token, itemId, important, done);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <ItemList\r\n            handleClick={handleClick}\r\n            sending={sending}\r\n            text={text}\r\n            important={important}\r\n            done={done} />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        sending: state.todoPage.sending\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        requestUpdateNoteThunk,\r\n        requestDeleteNoteThunk\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemListContainer);","import React from 'react';\r\n\r\nimport Loader from 'components/templates/Loader/Loader';\r\nimport ItemList from './ItemList/ItemListContainer';\r\n\r\nconst List = ({ notes, fetching }) => {\r\n    return(\r\n        <div className=\"list-container mb-3\">\r\n            {notes.length ? \r\n            <ul className=\"list-group\">\r\n                {\r\n                    notes.map(({_id, text, important, done}) => {\r\n                        return <ItemList \r\n                                    text={text} \r\n                                    important={important} \r\n                                    done={done} \r\n                                    key={_id} \r\n                                    itemId={_id} />;\r\n                    })\r\n                }\r\n            </ul>\r\n            : fetching ? \r\n            <div className=\"alert alert-primary\">\r\n                <Loader />\r\n            </div>\r\n            :\r\n            <div className=\"alert alert-warning\" role=\"alert\">\r\n                –í–∞—à —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫ –ø—É—Å—Ç!\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport List from './List';\r\nimport { requestNotesThunk } from 'redux/notesReducer';\r\n\r\nconst List–°ontainer = ({ notes, fetching, requestNotesThunk, token, search, activeFilter }) => {\r\n\r\n    useEffect(() => {\r\n        requestNotesThunk(token);\r\n    }, [requestNotesThunk, token]);\r\n\r\n    const searchNotes = (notes) => {\r\n        if(search === '') return notes;\r\n        return notes.filter((el) => {\r\n            return el.text.toLowerCase().includes(search.toLowerCase());\r\n        });\r\n    };\r\n\r\n    const filterNotes = (notes) => {\r\n        switch(activeFilter) {\r\n            case 'all':\r\n                return notes;\r\n            case 'active':\r\n                return notes.filter(el => el.done === false);\r\n            case 'done':\r\n                return notes.filter(el => el.done === true);\r\n            default:\r\n                return notes;\r\n        }\r\n    }\r\n\r\n    const resultNotes = searchNotes(filterNotes(notes));\r\n    \r\n    return(\r\n        <List \r\n            notes={resultNotes} \r\n            fetching={fetching} />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        notes: state.todoPage.notes,\r\n        fetching: state.todoPage.fetching,\r\n        search: state.todoPage.search,\r\n        activeFilter: state.todoPage.activeFilter\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        requestNotesThunk\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List–°ontainer);","import React from 'react';\r\n\r\nconst Search = ({ search, handleChangeSearch }) => {\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Search</span>\r\n            </div>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                onChange={handleChangeSearch}\r\n                value={search} \r\n                />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { setSearchAC } from 'redux/notesReducer';\r\nimport Search from './Search';\r\n\r\n\r\nconst SearchContainer = ({ search, setSearchAC }) => {\r\n\r\n    const handleChangeSearch = (e) => {\r\n        setSearchAC(e.target.value);\r\n    }\r\n    \r\n    return(\r\n        <Search\r\n            search={search}\r\n            handleChangeSearch={handleChangeSearch} />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        search: state.todoPage.search\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setSearchAC\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer);","import React from 'react';\r\n\r\nconst Filter = ({ handleChangeFilter, activeFilter }) => {\r\n\r\n    const filterButtons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ];\r\n\r\n    const buttons = filterButtons.map(({name, label}) => {\r\n        const isActive = activeFilter === name;\r\n        return(\r\n            <button \r\n                name={name}\r\n                key={name}\r\n                className={`btn btn-dark ${isActive && 'active'}`}\r\n                onClick={handleChangeFilter}>\r\n                {label}\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"btn-group mb-3\">\r\n            {buttons}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Filter from './Filter';\r\nimport { setFilterAC } from 'redux/notesReducer';\r\n\r\nconst FilterContainer = ({ setFilterAC, activeFilter }) => {\r\n\r\n    const handleChangeFilter = (e) => {\r\n        if(activeFilter !== e.target.name) {\r\n            setFilterAC(e.target.name);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Filter \r\n            handleChangeFilter={handleChangeFilter}\r\n            activeFilter={activeFilter} />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeFilter: state.todoPage.activeFilter\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setFilterAC\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer);","import React from 'react';\r\nimport Search from './Search/SearchContainer';\r\nimport Filter from './Filter/FilterContainer';\r\n\r\nconst Navigation = () => {\r\n    return(\r\n        <div className=\"navigation-panel mt-3 d-flex\">\r\n            <Search />\r\n            <Filter />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst InputGroup = ({ caption, handler, value, name, readonly }) => {\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">{caption}</span>\r\n            </div>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                onChange={handler}\r\n                value={value}\r\n                name={name}\r\n                readOnly={readonly ? true : false} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InputGroup;","import React from 'react';\r\n\r\nimport InputGroup from 'components/templates/InputGroup/InputGroup';\r\n\r\nconst AddItemField = ({ handleChangeField, newNote, sending, requestAddNoteThunk, token }) => {\r\n    return (\r\n        <div className=\"d-flex\">\r\n            <InputGroup \r\n                caption={'–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å'}\r\n                handler={handleChangeField}\r\n                value={newNote}\r\n                name={'newItem'} />\r\n            <button \r\n                type=\"submit\" \r\n                className=\"btn btn-dark mb-3\"\r\n                disabled={sending || !newNote.length}\r\n                onClick={() => requestAddNoteThunk(token, newNote)} \r\n                >\r\n                Add\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddItemField;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { requestAddNoteThunk, setNewNoteAC } from 'redux/notesReducer';\r\nimport AddItemField from './AddItemField';\r\n\r\nconst AddItemFieldContainer = ({ token, sending, requestAddNoteThunk, setNewNoteAC, newNote }) => {\r\n\r\n    const handleChangeField = (e) => {\r\n        setNewNoteAC(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <AddItemField \r\n            newNote={newNote}\r\n            handleChangeField={handleChangeField} \r\n            sending={sending}\r\n            token={token} \r\n            requestAddNoteThunk={requestAddNoteThunk} />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sending: state.todoPage.sending,\r\n        newNote: state.todoPage.newNote,\r\n        token: state.auth.token\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        requestAddNoteThunk,\r\n        setNewNoteAC\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItemFieldContainer);","import React from 'react';\r\n\r\nimport List from 'components/List/List–°ontainer';\r\nimport Navigation from 'components/Navigation/Navigation'\r\nimport AddItemField from 'components/AddItem/AddItemFieldContainer';\r\n\r\nconst TodoPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <List />\r\n            <AddItemField />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default TodoPage;","import React from 'react';\r\n\r\nconst AuthForm = ({ fetching, login, register, setAuthFormAC, fieldEmail, fieldPass }) => {\r\n\r\n    const handleChange = (e) => {\r\n        setAuthFormAC(e.target.name, e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={fieldEmail}\r\n                            onChange={handleChange}\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"pass\">–ü–∞—Ä–æ–ª—å</label>\r\n                        <input \r\n                            id=\"pass\" \r\n                            name=\"pass\" \r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            value={fieldPass}\r\n                            onChange={handleChange}\r\n                            />\r\n                    </div>\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={login}\r\n                        disabled={fetching}\r\n                        className=\"btn btn-primary mr-3\"\r\n                        >\r\n                        –í–æ–π—Ç–∏\r\n                    </button>\r\n                    <button \r\n                        onClick={register}\r\n                        disabled={fetching}\r\n                        className=\"btn btn-danger\"\r\n                        >\r\n                        –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AuthForm;\r\n\r\n// export default reduxForm({\r\n//     form: 'login'\r\n// })(AuthForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport AuthForm from './AuthForm';\r\nimport { requestLoginThunk, requestRegisterThunk, setAuthFormAC, cheackAuthThunk } from 'redux/authReducer';\r\nimport { useEffect } from 'react';\r\n\r\nconst AuthFormContainer = (props) => {\r\n\r\n    const {\r\n        fetching, \r\n        requestLoginThunk, \r\n        requestRegisterThunk, \r\n        cheackAuthThunk,\r\n        setAuthFormAC, \r\n        fieldEmail, \r\n        fieldPass\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        cheackAuthThunk();\r\n    }, [cheackAuthThunk]);\r\n\r\n    const login = () => {\r\n        requestLoginThunk(fieldEmail, fieldPass);\r\n    }\r\n\r\n    const register = () => {\r\n        requestRegisterThunk(fieldEmail, fieldPass);\r\n    }\r\n    \r\n    return <AuthForm \r\n                fetching={fetching} \r\n                login={login} \r\n                register={register}\r\n                setAuthFormAC={setAuthFormAC}\r\n                fieldEmail={fieldEmail}\r\n                fieldPass={fieldPass} />;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        requestLoginThunk,\r\n        requestRegisterThunk,\r\n        setAuthFormAC,\r\n        cheackAuthThunk\r\n    }, dispatch);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fetching: state.auth.fetching,\r\n        fieldEmail: state.auth.form.email,\r\n        fieldPass: state.auth.form.pass,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthFormContainer)","import React from 'react';\r\n\r\nimport AuthFormContainer from 'components/AuthForm/AuthFormContainer';\r\n\r\nconst AuthPage = () => {\r\n    return (\r\n        <AuthFormContainer />\r\n    )\r\n};\r\n\r\nexport default AuthPage;","import socketIOClient from \"socket.io-client\";\r\n\r\nconst useSocket = () => {\r\n    // return socketIOClient('http://localhost:5000');\r\n    return socketIOClient('https://minisocialnetw.herokuapp.com');\r\n};\r\n\r\nexport {\r\n    useSocket\r\n};","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = ({ avatar, small, alt, isDialog, isOnline }) => {\r\n    return (\r\n        <div className={ `avatar-block \r\n                ${isDialog ? 'avatar-block_status' : ''}\r\n                ${isOnline ? 'avatar-block_status_online' : ''}\r\n                ${small ? 'avatar-block_small' : ''}\r\n            `}>\r\n            <img \r\n                src={avatar ? avatar : \"https://instagram.inoutmkt.com.br/assets/img/no-avatar.png\" }\r\n                className=\"message-avatar\"\r\n                alt={alt ? alt : avatar ? avatar : 'no-avatar' } />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Avatar;","import React from 'react';\r\n\r\nimport Avatar from 'components/templates/Avatar/Avatar';\r\n\r\nconst OnlineUsersItem = ({data: {avatar, nickname}}) => {\r\n    return (\r\n        <li className=\"d-flex align-items-center\">\r\n            <Avatar avatar={avatar} alt={nickname} />\r\n            <span className=\"nickname\">\r\n                {nickname}\r\n            </span>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default OnlineUsersItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport './OnlineUsers.css';\r\nimport { setOpenOnlineUsersAC } from 'redux/chatReducer';\r\nimport OnlineUsersItem from './OnlineUsersItem/OnlineUsersItem';\r\n\r\nconst OnlineUsers = ({ onlineUsers, openOnlineUsers, setOpenOnlineUsersAC }) => {\r\n    return (\r\n        <div className=\"online-users\">\r\n            <span \r\n                className=\"online-users__switch\"\r\n                onClick={setOpenOnlineUsersAC}>\r\n                    –û–Ω–ª–∞–π–Ω —é–∑–µ—Ä—ã ({onlineUsers.length}) \r\n                    <span className=\"online-users__switch__status\">{openOnlineUsers ? '-' : '+'}</span>                \r\n            </span>\r\n            <ul className={`online-users__list ${openOnlineUsers && 'online-users__list_active'}`}>\r\n                {\r\n                    onlineUsers ? onlineUsers.map((el) => {\r\n                        return <OnlineUsersItem key={el._id} data={el.userId} />\r\n                    }) : ''\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        onlineUsers: state.chatPage.onlineUsers,\r\n        openOnlineUsers: state.chatPage.openOnlineUsers\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        setOpenOnlineUsersAC\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OnlineUsers);","import React from 'react';\r\n\r\nimport Avatar from 'components/templates/Avatar/Avatar';\r\n// import {emojify} from 'react-emojione';\r\n \r\nconst Message = ({ item, userId }) => {\r\n\r\n    return (\r\n        <div className={`message ${userId === item.senderId && 'message_my'}`}>\r\n            <div className=\"message__content\">\r\n                <div className=\"message__author\">\r\n                    <Avatar small={true} avatar={item.avatar} alt={item.author} />\r\n                    <span>{item.author}</span>\r\n                </div>\r\n                <div className=\"message__text\">\r\n                    {/* {emojify(item.text)} */}\r\n                    {item.text}\r\n                </div>\r\n            </div>\r\n            <span className=\"message_date\">{item.date}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nconst ErrorAlert = ({ type, children }) => {\r\n    return (\r\n        <div className={`alert alert-${type}`}>\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ErrorAlert;","import React, { useRef, useEffect } from 'react';\r\n\r\nimport \"./Messages.css\";\r\n\r\nimport Message from './Message/Message';\r\nimport ErrorAlert from 'components/templates/ErrorAlert/ErrorAlert';\r\n\r\nconst Messages = ({ messages = [], userId }) => {\r\n\r\n    const messagesRef = useRef();\r\n\r\n    useEffect(() => {\r\n        messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight);\r\n    });\r\n\r\n    let id = 1;\r\n    const renderMessages = messages.length > 0 ? \r\n            messages.map(item => {\r\n                return <Message key={id++} item={item} userId={userId} />\r\n            })\r\n            :\r\n            (\r\n                <ErrorAlert type=\"warning\">\r\n                    –ß–∞—Ç –ø—É—Å—Ç! –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ...\r\n                </ErrorAlert>\r\n            );\r\n\r\n    return (\r\n        <div className=\"messages\" ref={messagesRef} >\r\n            {renderMessages}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Messages;","import React, { useState } from 'react';\r\nimport { Picker } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\nimport './MessageInput.css';\r\nimport Avatar from 'components/templates/Avatar/Avatar';\r\n\r\nconst MessageInput = ({ submitMessage, declareIsTyping = () => {}, isTyping = {}, avatar }) => {\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [viewSmiles, setViewSmiles] = useState(false);\r\n\r\n    const changeHandler = (e) => {\r\n        setMessage(e.target.value);\r\n        if(declareIsTyping) {\r\n            declareIsTyping();\r\n        }\r\n    };\r\n    \r\n    const submitHandler = () => {\r\n        submitMessage(message);\r\n        setMessage('');\r\n    };\r\n\r\n    const addEmoji = e => {\r\n        let emoji = e.native;\r\n        setMessage(message + emoji);\r\n    };\r\n\r\n    const toggleViewSmiles = () => {\r\n        setViewSmiles(!viewSmiles);\r\n    };\r\n\r\n    return (\r\n        <div className=\"message-input\">\r\n            <Avatar avatar={avatar} />\r\n            <div className=\"message-input__content\">\r\n                <textarea \r\n                    name=\"text\" \r\n                    value={message}\r\n                    onChange={changeHandler}\r\n                    placeholder=\"–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\" />\r\n                <button \r\n                    className=\"message-input__smiles-toggle\"\r\n                    onClick={toggleViewSmiles} >\r\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                        viewBox=\"0 0 368 368\" space=\"preserve\">\r\n                        <g>\r\n                            <g>\r\n                                <g>\r\n                                    <path d=\"M261.336,226.04c-3.296-2.952-8.36-2.664-11.296,0.624C233.352,245.312,209.288,256,184,256\r\n                                        c-25.28,0-49.352-10.688-66.04-29.336c-2.952-3.288-8-3.576-11.296-0.624c-3.296,2.944-3.568,8-0.624,11.296\r\n                                        C125.76,259.368,154.176,272,184,272c29.832,0,58.248-12.64,77.96-34.664C264.904,234.04,264.624,228.984,261.336,226.04z\"/>\r\n                                    <path d=\"M184,0C82.544,0,0,82.544,0,184s82.544,184,184,184s184-82.544,184-184S285.456,0,184,0z M184,352\r\n                                        c-92.64,0-168-75.36-168-168S91.36,16,184,16s168,75.36,168,168S276.64,352,184,352z\"/>\r\n                                    <path d=\"M248,128c-22.056,0-40,17.944-40,40c0,4.416,3.584,8,8,8c4.416,0,8-3.584,8-8c0-13.232,10.768-24,24-24s24,10.768,24,24\r\n                                        c0,4.416,3.584,8,8,8c4.416,0,8-3.584,8-8C288,145.944,270.056,128,248,128z\"/>\r\n                                    <path d=\"M144,168c0,4.416,3.584,8,8,8s8-3.584,8-8c0-22.056-17.944-40-40-40c-22.056,0-40,17.944-40,40c0,4.416,3.584,8,8,8\r\n                                        s8-3.584,8-8c0-13.232,10.768-24,24-24S144,154.768,144,168z\"/>\r\n                                </g>\r\n                            </g>\r\n                        </g>\r\n                    </svg>  \r\n                </button>\r\n                {\r\n                    viewSmiles ? (\r\n                        <div className=\"message-input__smiles\">\r\n                            <Picker native onSelect={addEmoji} />\r\n                        </div>   \r\n                    ) : null\r\n                }\r\n            </div>\r\n            <div className=\"message-input__button-wrap\">\r\n                {\r\n                    isTyping.status && \r\n                    <span className=\"message-input__typing\">{`${isTyping.writersName} –ø–∏—à–µ—Ç`}</span>\r\n                }\r\n                <button \r\n                    className=\"btn btn-primary ml-auto\" \r\n                    onClick={submitHandler}\r\n                    disabled={message === '' ? true : false} >\r\n                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessageInput;","import React from 'react';\r\n\r\nimport OnlineUsers from 'components/OnlineUsers/OnlineUsers';\r\nimport Messages from 'components/Messages/Messages';\r\nimport MessageInput from 'components/Messages/MessageInput/MessageInput';\r\n\r\nconst Chat = ({ submitMessage, messages, avatar, userId }) => {\r\n    return (\r\n        <div className=\"messages-wrapper\">\r\n            <OnlineUsers />\r\n            <Messages messages={messages} userId={userId} />\r\n            <MessageInput submitMessage={submitMessage} avatar={avatar} />\r\n        </div> \r\n    )\r\n};\r\n\r\nexport default Chat;","import React, { useEffect }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Chat from './Chat';\r\nimport ErrorAlert from 'components/templates/ErrorAlert/ErrorAlert';\r\nimport { deleteUserAC, setOnlineUsersAC, pushMessageAC, clearMessagesAC } from 'redux/chatReducer';\r\n\r\nconst ChatContainerWrapper = (props) => {\r\n\r\n    const { nickname } = props;\r\n    if(!nickname) {\r\n        return (\r\n            <ErrorAlert type=\"danger\">\r\n                –î–ª—è –≤—Ö–æ–¥–∞ –≤ —á–∞—Ç –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å –Ω–∏–∫–Ω—ç–π–º. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∏–∫–Ω—ç–π–º –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ \"–ù–∞—Å—Ç—Ä–æ–π–∫–∏\".\r\n            </ErrorAlert>\r\n        )\r\n    }\r\n    return <ChatContainer {...props} />\r\n    \r\n};\r\n\r\nconst ChatContainer = ({ socket, userId, avatar, messages, deleteUserAC, setOnlineUsersAC, pushMessageAC, clearMessagesAC }) => {\r\n\r\n    useEffect(() => {\r\n        \r\n        socket.emit('CHAT:JOIN', { userId });\r\n\r\n        return () => {\r\n            deleteUserAC(socket.id);\r\n            clearMessagesAC();\r\n            socket.disconnect();\r\n        };\r\n\r\n    }, [userId, socket, deleteUserAC, clearMessagesAC]);\r\n\r\n    useEffect(() => {\r\n\r\n        const deleteUser = ({id}) => {\r\n            deleteUserAC(id);\r\n        };\r\n\r\n        socket.on('CHAT:DELETE_USER', deleteUser);\r\n\r\n        const addMess = (message) => {\r\n            pushMessageAC(message);\r\n        };\r\n\r\n        socket.on('CHAT:ADD_MESSAGE', addMess);\r\n\r\n        const pushOnlineUsersOnClient = ({onlineUsers}) => {\r\n            setOnlineUsersAC(onlineUsers);\r\n        };\r\n\r\n        socket.on('CHAT:PUSH_ONLINE_USERS_ON_CLIENT', pushOnlineUsersOnClient);\r\n\r\n        return () => {\r\n            socket.off('CHAT:DELETE_USER', deleteUser);\r\n            socket.off('CHAT:ADD_MESSAGE', addMess);\r\n            socket.off('CHAT:PUSH_ONLINE_USERS_ON_CLIENT', pushOnlineUsersOnClient);\r\n        }\r\n\r\n    }, [deleteUserAC, pushMessageAC, setOnlineUsersAC, socket]);\r\n\r\n    const submitMessage = (text) => {\r\n        socket.emit('CHAT:SEND_MESSAGE', { userId, text });\r\n    }\r\n\r\n    return (\r\n        <Chat \r\n            submitMessage={submitMessage}\r\n            messages={messages}\r\n            avatar={avatar}\r\n            userId={userId} />\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        avatar: state.auth.avatar,\r\n        messages: state.chatPage.messages,\r\n        nickname: state.auth.nickname\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        deleteUserAC,\r\n        setOnlineUsersAC,\r\n        pushMessageAC,\r\n        clearMessagesAC\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatContainerWrapper);","import React from 'react';\r\n\r\nimport { useSocket } from 'hooks/useSocket';\r\nimport Chat from 'components/Chat/ChatContainer';\r\n\r\nconst ChatPage = () => {\r\n    \r\n    const socket = useSocket();\r\n\r\n    return (\r\n        <Chat socket={socket} />\r\n    )\r\n};\r\n\r\nexport default ChatPage;","import { createContext } from 'react';\r\n\r\nconst dialogsContext = createContext();\r\n\r\nexport default dialogsContext;","import React, { useContext } from 'react';\r\n\r\nimport { DialogsContext } from 'context';\r\n\r\nconst DialogsSearchInput = () => {\r\n    \r\n    const {\r\n        searchField,\r\n        setSearchFieldAC,\r\n        setViewSearchWindowAC\r\n    } = useContext(DialogsContext);\r\n\r\n    return (\r\n        <div className=\"input-group input-group-default\">\r\n            <input \r\n                placeholder=\"–ù–∞–π–¥–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –ø–æ email\" \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                value={searchField}\r\n                onChange={ (e) => setSearchFieldAC(e.target.value) }\r\n                onFocus={ () => {setViewSearchWindowAC(true)} } />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogsSearchInput;","import React, { useContext } from 'react';\r\n\r\nimport Avatar from 'components/templates/Avatar/Avatar';\r\nimport { DialogsContext } from 'context';\r\n\r\nconst DialogsFoundItem = (props) => {\r\n\r\n    const { item } = props;\r\n\r\n    const {\r\n        selectedNewId,\r\n        setSelectedNewIdAC\r\n    } = useContext(DialogsContext);;\r\n\r\n    return (\r\n        <li>\r\n            <label htmlFor={item.partnerId}>\r\n                <Avatar \r\n                    small={true}\r\n                    avatar={item.avatar}\r\n                    alt={item.email} />\r\n                <span>{item.email}</span>\r\n                <input \r\n                    id={item.partnerId}\r\n                    name=\"checkDialog\" \r\n                    type=\"radio\" \r\n                    value={item.partnerId}\r\n                    checked={selectedNewId === item.partnerId}\r\n                    onChange={(e) => setSelectedNewIdAC(e.target.value)} />\r\n            </label>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default DialogsFoundItem;","import React, { useContext } from 'react';\r\n\r\nimport { DialogsContext } from 'context';\r\n\r\nconst DialogsNewMessage = () => {\r\n\r\n    const {\r\n        loading,\r\n        firstMessage,\r\n        selectedNewId,\r\n        setFirstMessageAC,\r\n        createDialog\r\n    } = useContext(DialogsContext);\r\n    \r\n    return (\r\n        <div className=\"found__new-message\">\r\n            <textarea \r\n                placeholder=\"–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\"\r\n                name=\"newMessage\"\r\n                value={firstMessage}\r\n                onChange={(e) => { setFirstMessageAC(e.target.value) }}\r\n                disabled={!loading && selectedNewId ? false : true}></textarea>\r\n            <button\r\n                onClick={() => createDialog(selectedNewId, firstMessage)}\r\n                disabled={!loading && (selectedNewId && firstMessage.length > 0) ? false : true}\r\n                className=\"dialogs__button text-center\" \r\n                type=\"button\">\r\n                –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogsNewMessage;","import React, { useContext } from 'react';\r\n\r\nimport Loader from 'components/templates/Loader/Loader';\r\nimport ErrorAlert from 'components/templates/ErrorAlert/ErrorAlert';\r\nimport DialogsFoundItem from './DialogsFoundItem/DialogsFoundItem';\r\nimport DialogsNewMessage from './DialogsNewMessage/DialogsNewMessage';\r\nimport { DialogsContext } from 'context';\r\n\r\nconst DialogsFound = (props) => {\r\n\r\n    const { \r\n        token,\r\n        loading,\r\n        viewSearchWindow,\r\n        searchField,\r\n        foundUsers,\r\n\r\n        findUsersThunk,\r\n        setViewSearchWindowAC,\r\n    } = useContext(DialogsContext);\r\n\r\n    return (\r\n        <div className={`dialogs__found ${viewSearchWindow ? 'dialogs__found_active' : ''}`}>\r\n            <button \r\n                className=\"dialogs__button dialogs__button_search\"\r\n                disabled={searchField.length >= 3 ? false : true}\r\n                onClick={() => findUsersThunk(token, searchField)}\r\n                >–ò—Å–∫–∞—Ç—å</button>\r\n            <button \r\n                className=\"dialogs__button\" \r\n                type=\"button\"\r\n                onClick={ () => {setViewSearchWindowAC(false)} }>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 447.243 447.243\" space=\"preserve\">\r\n                    <g>\r\n                        <g>\r\n                            <path d=\"M420.361,192.229c-1.83-0.297-3.682-0.434-5.535-0.41H99.305l6.88-3.2c6.725-3.183,12.843-7.515,18.08-12.8l88.48-88.48c11.653-11.124,13.611-29.019,4.64-42.4c-10.441-14.259-30.464-17.355-44.724-6.914c-1.152,0.844-2.247,1.764-3.276,2.754l-160,160C-3.119,213.269-3.13,233.53,9.36,246.034c0.008,0.008,0.017,0.017,0.025,0.025l160,160c12.514,12.479,32.775,12.451,45.255-0.063c0.982-0.985,1.899-2.033,2.745-3.137c8.971-13.381,7.013-31.276-4.64-42.4l-88.32-88.64c-4.695-4.7-10.093-8.641-16-11.68l-9.6-4.32h314.24c16.347,0.607,30.689-10.812,33.76-26.88C449.654,211.494,437.806,195.059,420.361,192.229z\"/>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                –ù–∞–∑–∞–¥ –∫ –¥–∏–∞–ª–æ–≥–∞–º\r\n            </button>\r\n\r\n            <div className=\"found-dialogs\">\r\n                {   foundUsers.length ? \r\n                    <ul className=\"found-dialogs__list\">\r\n                        {\r\n                            foundUsers.map(item => {\r\n                                return (\r\n                                    <DialogsFoundItem key={item.partnerId} item={item} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul> : loading ? \r\n                    <Loader /> \r\n                    : searchField.length ? \r\n                    <ErrorAlert type=\"warning\">–ù–∏–∫–æ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</ErrorAlert> \r\n                    :\r\n                    <ErrorAlert type=\"warning\">–ù–∞–π–¥–∏—Ç–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –ø–æ email</ErrorAlert> \r\n                }\r\n\r\n                <DialogsNewMessage />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogsFound;","import React from 'react';\r\n\r\nimport './DialogsSearch.css';\r\nimport DialogsSearchInput from './DialogsSearchInput/DialogsSearchInput';\r\nimport DialogsFound from './DialogsFound/DialogsFound';\r\n\r\nconst DialogsSearch = () => {\r\n    return (\r\n        <div className=\"dialogs__search\">\r\n            <DialogsSearchInput />\r\n            <DialogsFound />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogsSearch;","import React from 'react';\r\n\r\nimport './DialogItem.css';\r\nimport Avatar from 'components/templates/Avatar/Avatar';\r\nimport { useContext } from 'react';\r\nimport { DialogsContext } from 'context';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    const { item } = props;\r\n\r\n    const {\r\n        selectedDialog,\r\n        selectDialog\r\n    } = useContext(DialogsContext);\r\n\r\n    return (\r\n        <li \r\n            className={`dialogs__item ${item.id === selectedDialog ? 'dialogs__item_active' : ''}`}\r\n            onClick={() => selectDialog(item.id, item.participants)} >\r\n            <Avatar isDialog={true} isOnline={item.isOnline} small=\"true\" avatar={item.avatar} alt={item.email} />\r\n            <div className=\"dialog\">\r\n                <div className=\"d-flex flex-row justify-content-between\">\r\n                    <span className=\"dialog__email\">{item.email}</span>    \r\n                    <span className=\"dialog__updated\">{item.date}</span>\r\n                </div>\r\n                <span className={`dialog__message ${item.my ? item.unreadMessages ? 'dialog__message_my-unread' : 'dialog__message_my-read' : ''}`}>\r\n                    {\r\n                        item.text.length > 20 ? `${item.text.substring(0, 20)}...` : item.text\r\n                    }\r\n                </span>\r\n            </div>\r\n            {\r\n                item.unreadMessages > 0 && !item.my && (<div className=\"dialog__new-messages\">\r\n                                    <span>{item.unreadMessages}</span>\r\n                                </div>) \r\n            }\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React, { useContext } from 'react';\r\n\r\nimport './DialogBlock.css';\r\nimport Loader from 'components/templates/Loader/Loader';\r\nimport ErrorAlert from 'components/templates/ErrorAlert/ErrorAlert';\r\nimport DialogsSearch from './DialogsSearch/DialogsSearch';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport { DialogsContext } from 'context';\r\n\r\n\r\nconst Dialogs = ({ dialogWindowStatus }) => {\r\n    \r\n    const { dialogs, loading } = useContext(DialogsContext);\r\n\r\n    return (\r\n        <div className={`dialogs ${dialogWindowStatus ? 'dialogs_mobile-active' : ''}`} >\r\n            <DialogsSearch />\r\n            {\r\n                dialogs.length ?\r\n                <ul className=\"dialogs__list\">\r\n                    {\r\n                        dialogs.map(item => {\r\n                            return (\r\n                                <DialogItem \r\n                                    key={item.id}\r\n                                    item={item}\r\n                                 />\r\n                            )\r\n                        })\r\n                    }\r\n                </ul> \r\n                : loading ? \r\n                <Loader /> \r\n                : \r\n                <ErrorAlert type=\"warning\" >\r\n                    –î–∏–∞–ª–æ–≥–æ–≤ –Ω–µ—Ç—É. –ù–∞–π–¥–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.\r\n                </ErrorAlert>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React, { useContext, useState } from 'react';\r\n\r\nimport './Dialogs.css';\r\n\r\nimport DialogsBlock from 'components/DialogsBlock/DialogsBlock';\r\nimport Messages from 'components/Messages/Messages';\r\nimport MessageInput from 'components/Messages/MessageInput/MessageInput';\r\nimport ErrorAlert from 'components/templates/ErrorAlert/ErrorAlert';\r\nimport Loader from 'components/templates/Loader/Loader';\r\nimport { DialogsContext } from 'context';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const { loading, selectedDialog } = useContext(DialogsContext);\r\n\r\n    const [dialogWindowStatus, setDialogWindowStatus] = useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setDialogWindowStatus(!dialogWindowStatus);\r\n    };\r\n\r\n    const {\r\n        messages, \r\n        userId, \r\n        submitMessage, \r\n        avatar,\r\n        declareIsTyping,\r\n        isTyping\r\n    } = props.messagesProps;\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-lg-3 pl-0 pr-0\">\r\n                <button \r\n                    className=\"btn btn-primary w-100 dialogs-toggler\"\r\n                    onClick={toggleMenu}\r\n                    >\r\n                    {\r\n                        dialogWindowStatus ? (selectedDialog && selectedDialog.length > 0 ? '–°–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ (–¥–∏–∞–ª–æ–≥ –æ—Ç–∫—Ä—ã—Ç)' : '–°–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫') : '–°–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤'\r\n                    }\r\n                </button>\r\n                <DialogsBlock dialogWindowStatus={dialogWindowStatus} />\r\n            </div>\r\n            <div className=\"col-12 col-lg-9 pl-0 pr-0 pl-lg-2 m-0 messages-wrapper w-auto\">\r\n                {\r\n                    selectedDialog && messages.length > 0 ? (\r\n                        <>\r\n                            <Messages messages={messages} userId={userId} />\r\n                            <MessageInput \r\n                                isTyping={isTyping}\r\n                                declareIsTyping={declareIsTyping} \r\n                                submitMessage={submitMessage} \r\n                                avatar={avatar} />\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"messages-plug text-center\">\r\n                            {\r\n                                loading ? <Loader /> : <ErrorAlert type=\"warning\">–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞</ErrorAlert>\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","export const getPartner = (userId, selectedDialog, dialogs) => {        \r\n    const dialog = dialogs.filter(item => item.id === selectedDialog);\r\n    const participants = dialog[0].participants;\r\n\r\n    if(participants.author._id === userId) return participants.partner;\r\n    else return participants.author;\r\n};","import React, { useEffect, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { DialogsContext } from 'context';\r\n\r\nimport Dialogs from './Dialogs';\r\nimport { \r\n    setViewSearchWindowAC, \r\n    setSearchFieldAC, \r\n    setSelectedNewIdAC, \r\n    setFirstMessageAC, \r\n    pushToMessagesThunk,\r\n    setSelectedDialogAC,\r\n    updateReadstatusAC,\r\n    setMessagesAC,\r\n    setIsTypingAC,\r\n    getDialogsThunk,\r\n    getMessagesFromDialogThunk,\r\n    findUsersThunk,\r\n    sendMessageThunk,\r\n    createDialogThunk\r\n} from 'redux/dialogsReducer';\r\nimport { getPartner } from 'utils/getPartner';\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n    const {\r\n        socket,\r\n\r\n        dialogs,\r\n        loading,\r\n        selectedDialog,\r\n        setSelectedDialogAC,\r\n        searchField,\r\n        viewSearchWindow,\r\n        foundUsers,\r\n        selectedNewId,\r\n        firstMessage,\r\n        isTyping,\r\n        setSearchFieldAC,\r\n        setViewSearchWindowAC,\r\n        setSelectedNewIdAC,\r\n        setFirstMessageAC,\r\n        pushToMessagesThunk,\r\n        updateReadstatusAC,\r\n        setMessagesAC,\r\n        setIsTypingAC,\r\n\r\n        getDialogsThunk,\r\n        getMessagesFromDialogThunk,\r\n        findUsersThunk,\r\n        sendMessageThunk,\r\n        createDialogThunk,\r\n\r\n        messages,\r\n        userId,\r\n        avatar,\r\n        nickname, \r\n        email,\r\n        token\r\n    } = props;\r\n\r\n    const createDialog = (selectedNewId, firstMessage) => {\r\n        createDialogThunk(token, userId, selectedNewId, firstMessage)\r\n            .then(() => {\r\n                getDialogsThunk(token, userId);\r\n                setMessagesAC([]);\r\n                setSelectedDialogAC('');\r\n                socket.emit('DIALOGS:CREATED_DIALOG', {\r\n                    partnerId: selectedNewId\r\n                });\r\n            });\r\n    };\r\n\r\n    const selectDialog = (dialogId, participants) => {\r\n        socket.emit('DIALOGS:LEAVE_FROM_DIALOG', {\r\n            dialogId: selectedDialog\r\n        });\r\n        socket.emit('DIALOGS:JOIN_TO_DIALOG', {\r\n            dialogId\r\n        });\r\n        setSelectedDialogAC(dialogId);\r\n        getMessagesFromDialogThunk(token, dialogId, participants);\r\n    };\r\n\r\n    const submitMessage = (text) => {\r\n\r\n        const partner = getPartner(userId, selectedDialog, dialogs);\r\n        \r\n        const user = {\r\n            userId,\r\n            avatar,\r\n            nickname,\r\n            email\r\n        };\r\n\r\n        sendMessageThunk(token, selectedDialog, text)\r\n            .then(() => {\r\n                socket.emit('DIALOGS:SEND_MESSAGE_TO_DIALOG', {\r\n                    user,\r\n                    text,\r\n                    dialogId: selectedDialog,\r\n                    partnerId: partner._id\r\n                });\r\n            });\r\n    };\r\n\r\n    const addMessage = useCallback(data => {\r\n        pushToMessagesThunk(data.message);\r\n        getDialogsThunk(token, userId);\r\n    }, [getDialogsThunk, pushToMessagesThunk, token, userId]);\r\n\r\n    const messagesReaded = useCallback(data => {\r\n        updateReadstatusAC(data.dialogId);\r\n    }, [updateReadstatusAC]);\r\n\r\n    const updateDialogs = useCallback(() => {\r\n        getDialogsThunk(token, userId);\r\n    }, [getDialogsThunk, token, userId]);\r\n\r\n    const declareIsTyping = () => {\r\n        const partner = getPartner(userId, selectedDialog, dialogs);\r\n        const author = getPartner(partner._id, selectedDialog, dialogs);\r\n\r\n        socket.emit('DIALOGS:IS_TYPING', {\r\n            writersName: author.nickname || author.email,\r\n            partnerId: partner._id,\r\n            dialogId: selectedDialog\r\n        });\r\n    };\r\n\r\n    const setIsTyping = useCallback(data => {\r\n        if(data.partnerId === userId) {\r\n            clearInterval(window.setIsTypingTimer);\r\n            setIsTypingAC({ status: true, writersName: data.writersName });\r\n            window.setIsTypingTimer = setTimeout(() => {\r\n                setIsTypingAC({ status: false, writersName: '' });\r\n            }, 2000);\r\n        }\r\n    }, [setIsTypingAC, userId]);\r\n\r\n    useEffect(() => {\r\n        getDialogsThunk(token, userId);\r\n        socket.emit('DIALOGS:JOIN', { userId });\r\n\r\n        return () => {\r\n            setMessagesAC([]);\r\n            setSelectedDialogAC('');\r\n            socket.disconnect();\r\n        };\r\n\r\n    }, [getDialogsThunk, setMessagesAC, setSelectedDialogAC, token, userId, socket]);\r\n    \r\n    useEffect(() => {\r\n\r\n        socket.on('DIALOGS:ADD_MESSAGE', addMessage);\r\n        socket.on('DIALOGS:MESSAGES_READED', messagesReaded);\r\n        socket.on('DIALOGS:UPDATE_DIALOGS', updateDialogs);\r\n        socket.on('DIALOGS:SET_IS_TYPING', setIsTyping);\r\n\r\n        return () => {\r\n            socket.off('DIALOGS:ADD_MESSAGE', addMessage);\r\n            socket.off('DIALOGS:MESSAGES_READED', messagesReaded);\r\n            socket.off('DIALOGS:UPDATE_DIALOGS', updateDialogs);\r\n            socket.off('DIALOGS:SET_IS_TYPING', setIsTyping);\r\n        };\r\n\r\n    }, [setIsTyping, addMessage, messagesReaded, updateDialogs, socket]);\r\n\r\n    const dialogsProps = {\r\n        userId,\r\n        token,\r\n        dialogs,\r\n        loading,\r\n        selectedDialog,\r\n        searchField,\r\n        viewSearchWindow,\r\n        foundUsers,\r\n        selectedNewId,\r\n        firstMessage,\r\n        isTyping,\r\n        setSearchFieldAC,\r\n        setViewSearchWindowAC,\r\n        setSelectedNewIdAC,\r\n        setFirstMessageAC,\r\n        findUsersThunk,\r\n        createDialog,\r\n\r\n        selectDialog\r\n    };\r\n\r\n    const messagesProps = {\r\n        userId,\r\n        avatar,\r\n        messages,\r\n        submitMessage,\r\n        declareIsTyping,\r\n        isTyping\r\n    };\r\n\r\n    return (\r\n        <DialogsContext.Provider value={dialogsProps} >\r\n            <Dialogs messagesProps={messagesProps} />\r\n        </DialogsContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.dialogsPage.loading,\r\n        firstMessage: state.dialogsPage.firstMessage,\r\n        foundUsers: state.dialogsPage.foundUsers,\r\n        selectedNewId: state.dialogsPage.selectedNewId,\r\n        searchField: state.dialogsPage.searchField,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        viewSearchWindow: state.dialogsPage.viewSearchWindow,\r\n        selectedDialog: state.dialogsPage.selectedDialog,\r\n        isTyping: state.dialogsPage.isTyping,\r\n        \r\n        messages: state.dialogsPage.messages,\r\n        userId: state.auth.userId,\r\n        avatar: state.auth.avatar,\r\n        token: state.auth.token,\r\n        nickname: state.auth.nickname,\r\n        email: state.auth.email\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        setViewSearchWindowAC,\r\n        setSearchFieldAC,\r\n        setSelectedNewIdAC,\r\n        setFirstMessageAC,\r\n        pushToMessagesThunk,\r\n        setSelectedDialogAC,\r\n        updateReadstatusAC,\r\n        setMessagesAC,\r\n        setIsTypingAC,\r\n\r\n        getDialogsThunk,\r\n        getMessagesFromDialogThunk,\r\n        findUsersThunk,\r\n        sendMessageThunk,\r\n        createDialogThunk\r\n\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsContainer)","import React from 'react';\r\n\r\nimport { useSocket } from 'hooks/useSocket';\r\nimport Dialogs from 'components/Dialogs/DialogsContainer';\r\n\r\nconst DialogsPage = () => {\r\n\r\n    const socket = useSocket();\r\n\r\n    return <Dialogs socket={socket} />\r\n};\r\n\r\nexport default DialogsPage;","import React from 'react';\r\n\r\nimport InputGroup from 'components/templates/InputGroup/InputGroup';\r\n\r\nconst Settings = ({ token, email, nickname, avatar, changeHandler, updateSettingsThunk, deleteAccThunk }) => {\r\n    return (\r\n        <div className=\"settings mt-3\">\r\n            <ul className=\"list-group list-group--emptyborder\" >\r\n                <li className=\"list-group-item\">\r\n                    <InputGroup \r\n                        caption={'Email'}\r\n                        value={email ? email : ''}\r\n                        name={'email'}\r\n                        readonly={true} />\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <InputGroup \r\n                        caption={'–ù–∏–∫–Ω—ç–π–º'}\r\n                        handler={changeHandler}\r\n                        value={nickname ? nickname : ''}\r\n                        name={'nickname'} />\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <InputGroup \r\n                        caption={'–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤–∞—Ç–∞—Ä'}\r\n                        handler={changeHandler}\r\n                        value={avatar ? avatar : ''}\r\n                        name={'avatar'} />\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <button onClick={() => updateSettingsThunk({token, nickname, avatar})} className=\"btn btn-primary float-right\">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <button onClick={() => deleteAccThunk({token})} className=\"btn btn-sm btn-danger\">–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</button>\r\n                </li>\r\n            </ul>             \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Settings from './Settings';\r\nimport { setSettingsAC, updateSettingsThunk, deleteAccThunk } from 'redux/authReducer';\r\n\r\nconst SettingsContainer = ({ token, email, nickname, avatar, setSettingsAC, updateSettingsThunk, deleteAccThunk }) => {\r\n\r\n    const changeHandler = (e) => {\r\n        setSettingsAC(e.target.name, e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Settings\r\n            token={token}\r\n            email={email}\r\n            nickname={nickname}\r\n            changeHandler={changeHandler}\r\n            updateSettingsThunk={updateSettingsThunk}\r\n            deleteAccThunk={deleteAccThunk}\r\n            avatar={avatar} />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        email: state.auth.email,\r\n        nickname: state.auth.nickname,\r\n        avatar: state.auth.avatar\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setSettingsAC,\r\n        updateSettingsThunk,\r\n        deleteAccThunk\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsContainer);","import React from 'react';\r\n\r\nimport './style.css';\r\nimport Settings from 'components/Settings/SettingsContainer';\r\n\r\nconst SettingsPage = () => {\r\n\r\n    return <Settings />\r\n};\r\n\r\nexport default SettingsPage;","import React from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport TodoPage from 'pages/TodoPage';\r\nimport AuthPage from 'pages/AuthPage';\r\nimport ChatPage from 'pages/ChatPage';\r\nimport DialogsPage from 'pages/DialogsPage';\r\nimport SettingsPage from 'pages/SettingsPage';\r\n\r\nconst routesRender = (isAuth) => {\r\n    if(isAuth) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/todo\" exact>\r\n                    <TodoPage />\r\n                </Route>\r\n                <Route path=\"/chat\" exact>\r\n                    <ChatPage />\r\n                </Route>\r\n                <Route path=\"/settings\" exact>\r\n                    <SettingsPage />\r\n                </Route>\r\n                <Route path=\"/dialogs\" exact>\r\n                    <DialogsPage />\r\n                </Route>\r\n                <Redirect to=\"/todo\" />\r\n            </Switch>\r\n        )\r\n    } else {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/auth\" exact>\r\n                    <AuthPage />\r\n                </Route>\r\n                <Redirect to=\"/auth\" />\r\n            </Switch>\r\n        )\r\n    }\r\n};\r\n\r\nexport default routesRender;","import React, { useState } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport './NavBar.css';\r\nimport { setAuthAC } from 'redux/authReducer';\r\nimport { useLocaleStorage } from 'hooks/useLocalStorage';\r\n\r\nconst NavBar = ({ setAuthAC }) => {\r\n\r\n    const [menuStatus, setMenuStatus] = useState(false);\r\n    const storage = useLocaleStorage();\r\n\r\n    const toggleMenu = () => {\r\n        setMenuStatus(!menuStatus);\r\n    };\r\n\r\n    const logoutHandler = (e) => {\r\n        e.preventDefault();\r\n        storage.deleteUser();\r\n        setAuthAC({});\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <span className=\"navbar-brand\">Notes</span>\r\n            <button \r\n                className=\"navbar-toggler\" \r\n                type=\"button\"\r\n                onClick={toggleMenu} >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div \r\n                className={`collapse navbar-collapse ${menuStatus && 'active'}`} \r\n                id=\"navbarNavAltMarkup\" >\r\n                <div className=\"navbar-nav ml-auto\">\r\n                    <NavLink \r\n                        className=\"nav-item nav-link\"\r\n                        to=\"/dialogs\">\r\n                        –î–∏–∞–ª–æ–≥–∏\r\n                    </NavLink>\r\n                    <NavLink \r\n                        className=\"nav-item nav-link\"\r\n                        to=\"/chat\">\r\n                        –ß–∞—Ç\r\n                    </NavLink>\r\n                    <NavLink \r\n                        className=\"nav-item nav-link\"\r\n                        to=\"/todo\">\r\n                        –ó–∞–º–µ—Ç–∫–∏\r\n                    </NavLink>\r\n                    <NavLink \r\n                        className=\"nav-item nav-link\"\r\n                        to=\"/settings\">\r\n                        –ù–∞—Å—Ç—Ä–æ–π–∫–∏\r\n                    </NavLink>\r\n                    <a \r\n                        className=\"nav-item nav-link\" \r\n                        href=\"/\"\r\n                        onClick={logoutHandler}\r\n                        >\r\n                        –í—ã–π—Ç–∏\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        setAuthAC\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(NavBar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\n\r\nimport routesRender from 'routes';\r\nimport NavBar from 'components/NavBar/NavBar';\r\n\r\nconst App = ({isAuth}) => {\r\n\r\n    const routes = routesRender(isAuth);\r\n    const nav = isAuth ? <NavBar /> : null;\r\n\r\n    return (\r\n        <div className=\"main-container main-container_dark\">\r\n            {nav}\r\n            <div className=\"container\">\r\n                {routes}\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport store from 'redux/store';\nimport App from 'components/App/App';\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>\n, document.getElementById('root'));"],"sourceRoot":""}